# ------------------- anchors ------------------- #
ignore_main_branches: &ignore_main_branches
  filters:
    branches:
      ignore:
        - main
        - develop
        - /epic\/.*/
        - /release\/.*/
        # Uncomment and add your current branch when testing
        - update/integration-test-ci
only_main_branches: &only_main_branches
  filters:
    branches:
      only:
        - main
        - develop
        - /epic\/.*/
        - /release\/.*/

auth: &dockerconfig
  username: $DOCKER_USERNAME
  password: $DOCKER_PASSWORD

cargo-base-job: &cargo-base-job
  docker:
    - image: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
      auth: *dockerconfig
  environment:
    SCCACHE_REDIS: redis://167.172.97.176:6379
    SCCACHE_CACHE_SIZE: 14G
  resource_class: xlarge

chainflip-docker-base: &chainflip-docker-base
  executor: docker/docker
  working_directory: /mnt/ramdisk
  steps:
    - setup_remote_docker:
        version: 19.03.13
        docker_layer_caching: true
    - checkout
    - attach_workspace:
        at: ./
    - docker/check:
        docker-username: DOCKER_USERNAME
        registry: ghcr.io
    - docker/build:
        image: $IMAGE
        registry: ghcr.io
        extra_build_args: $BUILD_ARGS
        dockerfile: $DOCKERFILE
        cache_from: $CACHE_FROM
    - docker/push:
        registry: ghcr.io
        image: $IMAGE
        tag: $TAG
# ------------------- anchors ------------------- #

version: 2.1
orbs:
  docker: circleci/docker@1.7.0
  discord: antonioned/discord@0.1.0
  gh: circleci/github-cli@1.0.4
workflows:
  chainflip-backend-checks:
    jobs:
      - build-rust-base:
          context:
            - ghcr-credentials
          <<: *ignore_main_branches
      - fmt-validator-package:
          requires:
            - build-rust-base
          context:
            - ghcr-credentials
          <<: *ignore_main_branches
      - check-validator-package:
          requires:
            - fmt-validator-package
          context:
            - ghcr-credentials
          <<: *ignore_main_branches
      - test-validator-package:
          requires:
            - check-validator-package
          context:
            - ghcr-credentials
          <<: *ignore_main_branches
  chainflip-backend-release:
    jobs:
      - build-rust-base:
          context:
            - ghcr-credentials
          <<: *only_main_branches
      - fmt-validator-package:
          requires:
            - build-rust-base
          context:
            - ghcr-credentials
          <<: *only_main_branches
      - compile-validator-package:
          requires:
            - fmt-validator-package
          context:
            - ghcr-credentials
            - discord-webhooks
          <<: *only_main_branches
      - test-validator-package:
          requires:
            - compile-validator-package
          context:
            - ghcr-credentials
          <<: *only_main_branches
      - build-chainflip-engine:
          requires:
            - test-validator-package
          context:
            - ghcr-credentials
          <<: *only_main_branches
      - build-state-chain-node:
          requires:
            - test-validator-package
          context:
            - ghcr-credentials
          <<: *only_main_branches

  chainflip-integration-tests:
    jobs:
      - build-rust-base:
          context:
            - ghcr-credentials
      - clone-contracts-repo:
          requires:
            - build-rust-base
          context:
            - github-credentials
      - hardhat-setup-and-start:
          requires:
            - clone-contracts-repo
          context:
            - ghcr-credentials
#      - eth-events-setup:
#          requires:
#            - hardhat-setup-and-start
#      - run-integration-tests:
#          context:
#            - discord-webhooks
#            - ghcr-credentials
#          requires:
#            - eth-events-setup
jobs:
  build-rust-base:
    <<: *chainflip-docker-base
    environment:
      IMAGE: chainflip-io/chainflip-backend/rust-base
      #      TODO: change back to latest
      TAG: unstable
      CACHE_FROM: $IMAGE:latest
      DOCKERFILE: Dockerfile.rust-base

  build-chainflip-engine:
    <<: *chainflip-docker-base
    environment:
      IMAGE: ghcr.io/chainflip-io/chainflip-backend/chainflip-engine
      TAG: <<pipeline.git.revision>>
      BUILD_ARGS: "--build-arg SERVICE=chainflip-engine"

  build-state-chain-node:
    <<: *chainflip-docker-base
    environment:
      IMAGE: ghcr.io/chainflip-io/chainflip-backend/state-chain-node
      TAG: <<pipeline.git.revision>>
      BUILD_ARGS: "--build-arg SERVICE=state-chain-node"

  fmt-validator-package:
    docker:
      - image: ghcr.io/chainflip-io/chainflip-backend/rust-base:latest
        auth: *dockerconfig
    steps:
      - checkout
      - run: >
          cargo fmt -p chainflip-engine
          -p cf-p2p
          -p cf-p2p-rpc
          -p pallet-cf-auction
          -p pallet-cf-emissions
          -p pallet-cf-flip
          -p pallet-cf-rewards
          -p pallet-cf-reputation
          -p pallet-cf-staking
          -p pallet-cf-validator
          -p pallet-cf-vaults
          -p pallet-cf-witnesser
          -p pallet-cf-witnesser-api
          -p cf-traits
          -- --check
      - run: if ! sccache -s; then echo 'warning - sccache is unhealthy'; fi

  check-validator-package:
    <<: *cargo-base-job
    steps:
      - checkout
      - run: sccache -s
      - run: cargo build --locked --release

  test-validator-package:
    <<: *cargo-base-job
    steps:
      - checkout
      - run: sccache -s
      - run: cargo test --locked --lib --release

  compile-validator-package:
    <<: *cargo-base-job
    steps:
      - checkout
      - run: sccache -s
      - run: cargo build --locked --release
      - persist_to_workspace:
          root: ./
          paths:
            - target/release/state-chain-node
            - target/release/chainflip-engine
      - discord/status:
          fail_only: true
          failure_message: ":red_circle: Build failure on $CIRCLE_BRANCH | $CIRCLE_BUILD_URL"
          only_for_branches: "develop,main"
          webhook: $DW_ALERTS_STAGING

  clone-contracts-repo:
    docker:
      - image: "cimg/base:stable"
    steps:
      - gh/setup
      - gh/clone:
          repo: https://github.com/chainflip-io/chainflip-eth-contracts.git
          dir: eth-contracts
      - persist_to_workspace:
          root: ./
          paths:
            - eth-contracts
  hardhat-setup-and-start:
    docker:
      - image: ghcr.io/chainflip-io/chainflip-backend/rust-base:unstable
        auth: *dockerconfig
      - image: nats
    steps:
      - attach_workspace:
          at: ./
      - run:
          name: Install dependencies
          command: |
            cd eth-contracts
            npm install
      - run:
          name: Run Hardhat
          background: true
          command: |
            cd eth-contracts
            npx hardhat node
      - run: sleep 5
      - run:
          name: Install poetry dependencies and deploy contracts
          command: |
            cd eth-contracts
            poetry install
            poetry run brownie run deploy_and all_events --network hardhat
      - checkout
      - run: cargo test --locked --release
