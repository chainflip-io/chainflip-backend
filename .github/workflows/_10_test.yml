on:
  workflow_call:
    inputs:
      ci-runner:
        default: rust-builder
        description: The CI runner to use
        type: string

env:
  FORCE_COLOR: 1
  CARGO_TERM_COLOR: always
jobs:
  unit-tests:
    runs-on: namespace-profile-${{ inputs.ci-runner }}
    container:
      image: "nscr.io/n0ie27k9ikobs/chainflip-backend/rust-base:nightly-2025-01-1"
      volumes:
        - /cache:/cache
      options: --cap-add=SYS_ADMIN
      env:
        NSC_CACHE_PATH: "/cache"
    strategy:
      matrix:
        test-run-cmd:
          - cargo
          - cargo nextest run
    steps:
      - name: Checkout ðŸ›’
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Set up Rust cache ðŸ¦€ðŸ’°
        if: contains(inputs.ci-runner, 'no-cache') == false
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          cache: rust

      - uses: taiki-e/install-action@a209ff0ce0349f9e7cadc4ba8f6a415c8d3b0813
        with:
          tool: nextest@0.9.92

      - name: Run tests ðŸ§ª
        run: |
          ${{ matrix.test-run-cmd }} cf-test-ci --locked
        timeout-minutes: 23
