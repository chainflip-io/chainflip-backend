on:
  workflow_call:

env:
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
jobs:
  unit-tests:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-test
      cancel-in-progress: true
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      COMMIT_HASH: ${{ needs.set-variables.outputs.commit_hash }}
      BRANCH_NAME: ${{ needs.set-variables.outputs.branch_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup sccache
        run: |
          wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          mv sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/bin
          sccache --show-stats

      - name: cargo cf-test-ci --locked
        run: |
          cargo cf-test-ci --locked
          sccache --show-stats

  coverage:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-coverage
      cancel-in-progress: true
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup sccache
        run: |
          wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          mv sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/bin
          sccache --show-stats
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --lib --features runtime-benchmarks,slow-tests --workspace --codecov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CF_BACKEND_CODECOV_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: false
#  coverage-2:
#    runs-on: [hetzner]
#    concurrency:
#      group: ${{ github.ref }}-coverage-2
#      cancel-in-progress: true
#    container:
#      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
#      options: --security-opt seccomp=unconfined
#      credentials:
#        username: ${{ github.actor }}
#        password: ${{ secrets.GITHUB_TOKEN }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup sccache
#        run: |
#          wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
#          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
#          mv sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/bin
#          sccache --show-stats
#      - name: Install tarpauline
#        run: cargo install cargo-tarpaulin
#      - name: Generate code coverage
#        run: cargo tarpaulin --features runtime-benchmarks --workspace --out Xml
#      - name: Upload coverage to Codecov
#        uses: codecov/codecov-action@v3
#        with:
#          token: ${{ secrets.CF_BACKEND_CODECOV_TOKEN }} # not required for public repos
#          fail_ci_if_error: false