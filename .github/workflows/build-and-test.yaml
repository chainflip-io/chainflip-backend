name: Checks
on:
  push:
    branches:
      - develop
      - release/*
  pull_request:

env:
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
  SCCACHE_DIR: ""

jobs:
  cargo-fmt:
    runs-on: [self-hosted, linux, x64, ephemeral]
    environment: development
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-08-08"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check format
        run: |
          cargo fmt --all -- --check
  cargo-doc:
    runs-on: [self-hosted, linux, x64, ephemeral]
    environment: development
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-08-08"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt update
      - name: Setup sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 32G
          variant: sccache
          save: false
      - run: sccache --show-stats
      - name: Run cargo doc
        run: |
          cargo doc --workspace --document-private-items --no-deps
      - run: sccache --show-stats
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-doc
          path: |
            ./target/doc/

  build-and-test:
    runs-on: [self-hosted, linux, x64, ephemeral]
    environment: development
    needs: [cargo-fmt]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-08-08"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt update
      - name: Setup sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 32G
          variant: sccache
          save: false
      - run: sccache --show-stats
      - run: |
          cargo ci-build --locked
          sccache --show-stats
      - run: |
          cargo ci-test --locked
          sccache --show-stats
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - name: Get date
        id: vars
        run: |
          echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
      - name: Build packages
        run: |
          cargo deb --no-build --no-strip -p chainflip-engine --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p chainflip-cli --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p chainflip-node --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p generate-genesis-keys --deb-revision "${{ steps.vars.outputs.date }}"
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-packages
          path: target/debian/*.deb
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-bin
          path: |
            ./target/release/chainflip-node
            ./target/release/chainflip-engine
            ./target/release/chainflip-cli
            ./target/release/generate-genesis-keys
            ./target/release/wbuild/state-chain-runtime/state_chain_runtime.wasm

  build-ibiza:
    runs-on: [self-hosted, linux, x64, ephemeral]
    environment: development
    needs: [cargo-fmt]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-08-08"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt update
      - name: Setup sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 32G
          variant: sccache
          save: false
      - run: sccache --show-stats
      - run: |
          cargo ci-build-ibiza --locked
          sccache --show-stats
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-ibiza
          path: |
            ./target/release/chainflip-node
            ./target/release/chainflip-engine
            ./target/release/chainflip-cli
            ./target/release/generate-genesis-keys
            ./target/release/wbuild/state-chain-runtime/state_chain_runtime.wasm

  test-single-node:
    runs-on: [self-hosted, linux, x64, ephemeral]
    environment: development
    needs: [build-and-test]
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 17
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download previously built binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin
          path: ./target/release
      - name: Setup config and give permissions
        run: |
          mkdir config
          echo -n ${{ secrets.BASHFUL_SIGNING_KEY }} > signing_key_file
          echo -n ${{ secrets.ETH_PRIVATE_KEY }} > eth_private_key_file
          echo -n ${{ secrets.NODE_KEY }} > node_key_file
          chmod +x ./target/release/chainflip*
      - name: Run node in background
        run: |
          ./target/release/chainflip-node --chain cf-dev --node-key-file=node_key_file &
          sleep 2
      - name: Check node health
        run: >
          curl --request POST -L
          -H "Content-Type:application/json;charset=utf-8"
          --data '{"id":1, "jsonrpc":"2.0", "method": "system_health"}'
          --url 'http://localhost:9933'
          --connect-timeout 5
          --max-time 10
          --retry 3
          --retry-delay 1
          --retry-max-time 20
          --retry-connrefused
          -vv
      - name: Run engine in background
        run: |
          ./target/release/chainflip-engine --config-path engine/config/CI.toml &
          sleep 2
        env:
          ETH__NODE_ENDPOINT: ${{ secrets.ETH__NODE_ENDPOINT }}
          ETH__WS_NODE_ENDPOINT: ${{ secrets.ETH__WS_NODE_ENDPOINT }}
          ETH__HTTP_NODE_ENDPOINT: ${{ secrets.ETH__HTTP_NODE_ENDPOINT }}
      - name: Check engine health
        run: >
          curl
          --url 'http://localhost:5555/health'
          --connect-timeout 5
          --max-time 10
          --retry 5
          --retry-delay 1
          --retry-max-time 20
          --retry-connrefused
          -vv
      - name: Clone docgen
        uses: actions/checkout@v3
        with:
          repository: chainflip-io/chainflip-docgen
          ref: main
          token: ${{ secrets.CF_GITHUB_BOT_TOKEN }}
          path: chainflip-docgen
      - name: npm install
        run: |
          cd chainflip-docgen
          npm install
      - name: Generate State Chain docs
        run: |
          export WS_ENDPOINT="ws://127.0.0.1:9944"
          export TYPES_FILE="../state-chain/types.json"
          cd chainflip-docgen/
          npm run generate
      - name: Install graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"
      - name: Generate class diagram
        run: |
          cd chainflip-docgen/
          java -jar plantuml.jar generated/class.puml
      - name: Upload diagram
        uses: actions/upload-artifact@v3
        with:
          name: generated-diagram
          path: |
            chainflip-docgen/generated

  deb-publish:
    name: Publish to APT repo
    needs: [test-single-node]
    uses: ./.github/workflows/.deb-publish.yaml
    secrets: inherit
