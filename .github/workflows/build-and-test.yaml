name: Checks
on:
  workflow_call:


env:
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.0-pre.6
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
  CF_RUNNER_SUDO_PASSWORD: ${{ secrets.CF_RUNNER_SUDO_PASSWORD }}

jobs:
  set-variables:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.ref }}-set-variables
      cancel-in-progress: true
    outputs:
      commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
      branch_name: ${{ steps.branch_name.outputs.branch_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse --verify HEAD)
          echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
      - id: branch_name
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

  cargo-fmt:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-cargo-fmt
      cancel-in-progress: true
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check Format
        run: cargo fmt --all -- --check

  cargo-clippy:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-cargo-clippy
      cancel-in-progress: true
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check Linting
        run: cargo cf-clippy-ci

  cargo-doc:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-cargo-doc
      cancel-in-progress: true
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt-get update
      - name: Setup sccache
        run: |
          wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          mv sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/bin
      - run: sccache --show-stats
      - name: Run cargo doc
        run: |
          cargo doc --workspace --document-private-items --no-deps
      - run: sccache --show-stats
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-doc
          path: |
            ./target/doc/

  build-and-test:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-build-and-test
      cancel-in-progress: true
    needs: [set-variables, cargo-fmt]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      COMMIT_HASH: ${{ needs.set-variables.outputs.commit_hash }}
      BRANCH_NAME: ${{ needs.set-variables.outputs.branch_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt-get update
      - name: Setup sccache
        run: |
          wget https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          tar -xvf sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz
          mv sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/bin
      - run: sccache --show-stats
      - name: cargo cf-build-ci
        run: |
          cargo cf-build-ci --locked
          sccache --show-stats
      - name: cargo cf-test-ci --locked
        run: |
          cargo cf-test-ci --locked
          sccache --show-stats
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - name: Get date
        id: vars
        run: |
          echo "date=$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT
      - name: Build packages
        run: |
          cargo deb --no-build --no-strip -p chainflip-engine --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p chainflip-cli --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p chainflip-node --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p chainflip-relayer --deb-revision "${{ steps.vars.outputs.date }}"
          cargo deb --no-build --no-strip -p generate-genesis-keys --deb-revision "${{ steps.vars.outputs.date }}"
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-packages
          path: target/debian/*.deb
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-bin
          path: |
            ./target/release/chainflip-node
            ./target/release/chainflip-engine
            ./target/release/chainflip-cli
            ./target/release/generate-genesis-keys
            ./target/release/chainflip-relayer
            ./target/release/wbuild/state-chain-runtime/state_chain_runtime*.wasm
      - name: Check if building changes any files
        run: |
          git diff --exit-code
          git diff --cached --exit-code

  run-benchmarks:
    runs-on: [hetzner]
    concurrency:
      group: ${{ github.ref }}-run-benchmarks
      cancel-in-progress: true
    needs: [build-and-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download previously built binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin
          path: ./target/release
      - name: Run benchmarks
        run: |
          chmod +x ./target/release/chainflip-node
          ./state-chain/scripts/benchmark-all.sh --binary ./target/release/chainflip-node --steps 2 --repetitions 1

  deb-publish:
    name: Publish Packages to APT repo
    needs: [set-variables, build-and-test]
    uses: ./.github/workflows/.deb-publish.yaml
    with:
      artifacts: chainflip-backend-packages
      version: ci/${{ needs.set-variables.outputs.commit_hash }}/
      environment: dev
      commit_hash: ${{ needs.set-variables.outputs.commit_hash }}
    secrets: inherit
