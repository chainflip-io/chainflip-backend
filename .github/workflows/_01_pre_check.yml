on:
  workflow_call:
    inputs:
      checkout_merge_commit:
        type: boolean
        default: false
        required: false


env:
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}

jobs:
  cargo-fmt:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-03-20"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout PR Head Commit
        if: github.event.inputs.checkout_merge_commit == false && github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Checkout Merge Commit
        if: github.event.inputs.checkout_merge_commit == true && github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"

      - name: Checkout
        if: github.event.inputs.checkout_merge_commit == false || github.event_name != 'pull_request'
        uses: actions/checkout@v3

      - name: Check Format
        run: cargo fmt --all -- --check

  audit:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-03-20"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: cargo audit
        run: cargo cf-audit -D unmaintained -D unsound

  cargo-clippy:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-03-20"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup sccache
        run: ./ci/scripts/install_sccache.sh $SCCACHE_VERSION
      - name: Check Linting
        run: cargo cf-clippy-ci

  check-localnet-config:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout üèÅ
        uses: actions/checkout@v3

      - name: Login to Github Container Registry üîë
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run docker compose up
        run: docker compose -f ./localnet/docker-compose.yml up -d
      - name: Stop containers
        if: always()
        run: docker compose -f ./localnet/docker-compose.yml down --remove-orphans

  lint-ci-workflows:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=
        shell: bash