on:
  workflow_call:

env:
  FORCE_COLOR: 1

jobs:
  cargo-fmt:
    runs-on: namespace-profile-rust-builder
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2024-02-04-ubuntu-22.04-48"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Check Format
        run: cargo fmt --all -- --check

  audit:
    runs-on: namespace-profile-default
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2024-02-04-ubuntu-22.04-48"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: cargo audit 🕵️‍♂️
        run: cargo cf-audit

  cargo-clippy:
    runs-on: namespace-profile-rust-builder
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2024-02-04-ubuntu-22.04-48"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Check Linting 📝
        run: cargo cf-clippy-ci

  lint-bouncer:
    runs-on: namespace-profile-default
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Install pnpm 💿
        run: npm install -g pnpm

      - name: Configure NodeJS 🛠️
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65
        with:
          node-version-file: ./bouncer/.nvmrc
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          cache-dependency-path: "bouncer/pnpm-lock.yaml"

      - name: Install node dependencies 📦
        working-directory: bouncer
        run: pnpm install

      - name: Run prettier check 🎨
        working-directory: bouncer
        run: pnpm prettier:check

      - name: Run eslint check 📝
        working-directory: bouncer
        run: pnpm eslint:check

      - name: Run typescript check 📝
        working-directory: bouncer
        run: pnpm tsc --noEmit

  lint-ci-workflows:
    runs-on: namespace-profile-default
    steps:
      - name: Checkout 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Check workflow files 📝
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=
        shell: bash

  lint-dockerfiles:
    runs-on: namespace-profile-default
    strategy:
      matrix:
        dockerfile:
          - chainflip-broker-api
          - chainflip-cli
          - chainflip-engine
          - chainflip-lp-api
          - chainflip-node
        environment:
          - development
          - production
        include:
          - dockerfile: rust-base
            environment: development
          - dockerfile: generate-genesis-keys
            environment: development
          - dockerfile: chainflip-ingress-egress-tracker
            environment: development
    steps:
      - name: Checkout 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Login to DockerHub 🔑
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.CF_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CF_DOCKERHUB_TOKEN }}

      - name: Lint 🐳🔬
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ci/docker/${{ matrix.environment }}/${{ matrix.dockerfile }}.Dockerfile
