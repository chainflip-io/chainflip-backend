on:
  workflow_call:

env:
  FORCE_COLOR: 1
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}

jobs:
  cargo-fmt:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-07-31-ubuntu-20.04"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Format
        run: cargo fmt --all -- --check

  audit:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-07-31-ubuntu-20.04"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: cargo audit
        run: cargo cf-audit -D unmaintained -D unsound

  cargo-clippy:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-07-31-ubuntu-20.04"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup sccache
        run: ./ci/scripts/install_sccache.sh $SCCACHE_VERSION
      - name: Check Linting
        run: cargo cf-clippy-ci

  lint-bouncer:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-07-31-ubuntu-20.04"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@v3

      - name: Configure NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@chainflip-io"
          cache-dependency-path: "bouncer/pnpm-lock.yaml"

      - name: Set NPM registry
        run: |
          pnpm set @chainflip-io:registry=https://npm.pkg.github.com/
          pnpm set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}

      - name: Install node dependencies
        working-directory: bouncer
        run: pnpm install

      - name: Run prettier check
        working-directory: bouncer
        run: pnpm prettier:check

      - name: Run eslint check
        working-directory: bouncer
        run: pnpm eslint:check

  lint-ci-workflows:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check workflow files
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -color -shellcheck=
        shell: bash

  lint-dev-dockerfiles:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dockerfile:
          - chainflip-broker-api
          - chainflip-cli
          - chainflip-engine
          - chainflip-lp-api
          - chainflip-node
          - generate-genesis-keys
          - rust-base
          - chainflip-btc-deposit-tracker
    steps:
      - name: Checkout 🏁
        uses: actions/checkout@v3

      - name: Lint 🐳🔬
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ci/docker/dev/${{ matrix.dockerfile }}.Dockerfile
  lint-prod-dockerfiles:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dockerfile:
          - chainflip-broker-api
          - chainflip-cli
          - chainflip-engine
          - chainflip-lp-api
          - chainflip-node
          - generate-genesis-keys
    steps:
      - name: Checkout 🏁
        uses: actions/checkout@v3

      - name: Lint 🐳🔬
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ci/docker/prod/${{ matrix.dockerfile }}.Dockerfile
