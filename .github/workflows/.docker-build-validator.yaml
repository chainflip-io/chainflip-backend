name: Build rust-base Docker image
on:
  workflow_call:
    inputs:
      release:
        type: string
        description: Ibiza or Sandstorm
        required: true
      image:
        type: string
        default: validator
        description: Image name
        required: false
      image_prefix:
        type: string
        description: Image prefix
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.image }}

jobs:
  build:
    name: Build Docker Image
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-20.04
    steps:
      - name: Setup Tailscale ü™° ‚öôÔ∏è
        id: tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.CF_TAILSCALE_AUTHKEY }}

      - name: Load secret üóùüë®‚Äçüíª
        uses: 1password/load-secrets-action@v1
        env:
          OP_CONNECT_HOST: ${{ secrets.CF_1PASSWORD_CONNECTOR_URL }}
          OP_CONNECT_TOKEN: ${{ secrets.CF_1PASSWORD_CONNECTOR_TOKEN_READ_ONLY }}
          APT_REPO_USERNAME: op://github-actions/CF_APT_REPO_BASIC_AUTH/username
          APT_REPO_PASSWORD: op://github-actions/CF_APT_REPO_BASIC_AUTH/password

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: |
            linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: |
            linux/amd64

      - name: Docker meta üîñ
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.image }}
          flavor: |
            latest=true
          tags: |
            type=sha,format=long,prefix=${{ inputs.image_prefix }},

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download packages
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifacts }}
          path: binaries

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: docker/validator-apt.Dockerfile
          build-args: |
            COMMIT_HASH=${{ github.sha }}
            APT_REPO_USERNAME=${{ env.APT_REPO_USERNAME }}
            APT_REPO_PASSWORD=${{ env.APT_REPO_PASSWORD }}
            RELEASE=${{ inputs.release }}
          platforms: |
            linux/amd64
