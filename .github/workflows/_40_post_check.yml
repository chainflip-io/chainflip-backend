name: Post build checks

on:
  workflow_call:
    inputs:
      simple_bouncer:
        type: boolean
        default: false
      timeout-minutes:
        type: number
        required: false
        default: 120

permissions:
  packages: read
  contents: read

jobs:
  bouncer:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-03-20-ubuntu-20.04"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    env:
      POLKADOT_ENDPOINT: ws://polkadot:9944
      BTC_ENDPOINT: http://bitcoin:8332
      ETH_ENDPOINT: http://geth:8545
    services:
      bitcoin:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-bitcoin-regtest:v24.0.1
        ports:
          - 8332:8332
      polkadot:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-private-polkadot/polkadot:v0.9.36-ci
        ports:
          - 9934:9933
          - 9945:9944
      geth:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-eth-contracts/geth:perseverance-rc17-1-node
        ports:
          - 30303:30303
          - 30303:30303/udp
          - 8545:8545
          - 8546:8546
          - 8551:8551
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@v3

      - name: Setup ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | tee /etc/apt/sources.list.d/ngrok.list
          apt update
          apt install ngrok

      - name: Configure NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"
          registry-url: "https://npm.pkg.github.com"
          scope: "@chainflip-io"
          cache-dependency-path: "bouncer/pnpm-lock.yaml"

      - name: Set NPM registry
        run: |
          pnpm set @chainflip-io:registry=https://npm.pkg.github.com/
          pnpm set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}

      - name: Install system packages
        run: |
          apt-get update
          apt-get install -y bc xxd

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin-ubuntu-20.04

      - name: Install node dependencies
        working-directory: bouncer
        run: pnpm install

      - name: Start a localnet
        env:
          BINARIES_LOCATION: .
        run: |
          chmod +x ${{ env.BINARIES_LOCATION }}/chainflip-*
          ./localnet/manage.sh

      - name: Expose endpoints for Polkadot and Chainflip
        env:
          NGROK_AUTHTOKEN: ${{ secrets.CF_NGROK_AUTHTOKEN }}
        continue-on-error: true
        run: |
          ngrok http http://localhost:9944 --log-format=logfmt --log=/tmp/ngrok-chainflip-node.log &
          ngrok http http://polkadot:9944 --log-format=logfmt --log=/tmp/ngrok-polkadot.log &
          sleep 10

      - name: Get ngrok URLs
        continue-on-error: true
        id: ngrok-urls
        run: python3 ./ci/scripts/get_ngrok_urls.py

      - name: Run EinfachHeuteLeiderNicht.exe
        if: inputs.simple_bouncer
        working-directory: bouncer
        run: |
          ./run_simple.sh

      - name: Run HeuteLeiderNicht.exe
        id: heuteleidernicht
        if: ${{ ! inputs.simple_bouncer }}
        working-directory: bouncer
        run: |
          ./run.sh

      - name: Print chainflip-engine logs
        if: failure()
        run: |
          cat /tmp/chainflip/chainflip-engine.log

      - name: Print chainflip-node logs
        if: failure()
        run: |
          cat /tmp/chainflip/chainflip-node.log

      - name: Upload Localnet Logs üíæ
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: localnet-logs
          path: |
            /tmp/chainflip/chainflip-*.log

      - name: Notify on failed bouncer
        if: failure() && github.ref_name == 'main' || cancelled() && github.ref_name == 'main'
        env:
          DISCORD_USERNAME: "HEUTE LEIDER NICHT"
          DISCORD_WEBHOOK: ${{ secrets.CF_DISCORD_ALERTS_CRITICAL }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è Sorry **${{ github.actor }}**, the Bouncer has rejected you ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è
            üëæ Link to job: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            #Ô∏è‚É£ Tagging: <@&939151218708709416>
            https://media.giphy.com/media/wHfwCBZzCMhmE/giphy.gif

  benchmarks:
    runs-on: [hetzner]
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download previously built binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin-ubuntu-20.04
          path: ./target/release

      - name: Run benchmarks
        run: |
          chmod +x ./target/release/chainflip-node
          ./state-chain/scripts/benchmark-all.sh --binary ./target/release/chainflip-node --steps 2 --repetitions 1
