name: Post build checks

on:
  workflow_call:
    inputs:
      full_bouncer:
        type: boolean
        default: false
      timeout-minutes:
        type: number
        required: false
        default: 120

env:
  FORCE_COLOR: 1
  SOLANA_VERSION: v1.18.3

permissions:
  packages: read
  contents: read

jobs:
  bouncer:
    runs-on: digitalocean
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Checkout chainflip-backend 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Login to Github Container Registry 🔑
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub 🔑
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.CF_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CF_DOCKERHUB_TOKEN }}

      - name: Configure NodeJS 🛠️
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65
        with:
          node-version: 20
          cache: "pnpm"
          cache-dependency-path: "bouncer/pnpm-lock.yaml"

      - name: Install system packages 💿
        run: |
          sudo apt update
          sudo apt install -y bc xxd

      - name: Install wscat 🐈
        run: |
          npm install -g wscat

      - name: Download binaries 📥
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: chainflip-backend-bin

      - name: Install node dependencies 📦
        working-directory: bouncer
        run: pnpm install

      - name: Install solana ☀️
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"

      - name: Start a localnet 🚀
        env:
          BINARY_ROOT_PATH: .
          DEBUG_OUTPUT_DESTINATION: /tmp/chainflip/debug.log
        run: |
          set -x
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          mkdir -p /tmp/chainflip/bashful
          mkdir -p /tmp/chainflip/doc
          mkdir -p /tmp/chainflip/dopey
          touch /tmp/chainflip/debug.log
          ls ${{ env.BINARY_ROOT_PATH }}
          sudo cp ${{ env.BINARY_ROOT_PATH }}/libchainflip_engine_v*.so /usr/lib/
          chmod +x ${{ env.BINARY_ROOT_PATH }}/chainflip-*
          chmod +x ${{ env.BINARY_ROOT_PATH }}/engine-runner
          touch ./localnet/.setup_complete
          ./localnet/manage.sh

      - name: Run HeuteLeiderNicht.voll.exe 🙅‍♂️
        if: inputs.full_bouncer
        working-directory: bouncer
        run: |
          ./full_bouncer.sh

      - name: Run HeuteLeiderNicht.einfach.exe 🦺
        if: ${{ ! inputs.full_bouncer }}
        working-directory: bouncer
        run: |
          ./run.sh

      - name: Print chainflip-engine logs 🚗
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-engine.*log

      - name: Print chainflip-node logs 📡
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-node.*log

      - name: Print chainflip-broker-api logs 💼
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip/chainflip-broker-api.*log

      - name: Print chainflip-lp-api logs 🤑
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip/chainflip-lp-api.*log

      - name: Print localnet init debug logs 🕵️‍♂️
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip/debug.log

      - name: Print solana logs ☀️
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/solana/solana.*log

      - name: Upload Localnet Logs 💾
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: localnet-logs
          path: |
            /tmp/chainflip/*/chainflip-*.*log
            /tmp/chainflip/chainflip-*.*log
            /tmp/chainflip/debug.*log
            /tmp/solana/*.*log

      - name: List /tmp/chainflip 📂
        if: always()
        continue-on-error: true
        run: ls -alR /tmp/chainflip

      - name: Show logs from docker containers 🐳🕵️‍♂️
        if: always()
        continue-on-error: true
        run: docker compose -f localnet/docker-compose.yml -p "chainflip-localnet" logs

      - name: Clean Up docker containers 🧹
        if: always()
        continue-on-error: true
        run: |
          docker compose -f localnet/docker-compose.yml -p "chainflip-localnet" down --rmi all --volumes --remove-orphans

      - name: Notify on failed bouncer 📢
        if: failure() && github.ref_name == 'main' || cancelled() && github.ref_name == 'main' || failure() && contains(github.ref_name, 'release/') || cancelled() && contains(github.ref_name, 'release/')
        env:
          DISCORD_USERNAME: "HEUTE LEIDER NICHT"
          DISCORD_WEBHOOK: ${{ secrets.CF_DISCORD_ALERTS_CRITICAL }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: |
            ❗️❗️❗️❗️ Sorry **${{ github.actor }}**, the Bouncer has rejected you ❗️❗️❗️❗️
            The Bouncer has rejected the build on branch `${{ github.ref_name }}`
            👾 Link to job: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>
            #️⃣ Tagging: <@&939151218708709416>

  chainspec-compatibility:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        network: [sisyphos, perseverance, berghain]
    steps:
      - name: Checkout chainflip-backend 🛒
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Download Binaries 📥
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a
        with:
          name: chainflip-backend-bin

      - name: Make Binaries Executable 🛠️
        run: |
          chmod +x chainflip-*

      - name: Run Test 🧪
        shell: bash
        run: ./ci/scripts/check_node_syncing.sh --network ${{ matrix.network }} --binary-root-path .

      - name: Print logs 📜
        if: always()
        continue-on-error: true
        run: |
          cat /tmp/chainflip-node.log
