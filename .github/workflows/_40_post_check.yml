name: Post build checks
on:
  workflow_call:
    inputs:
      simple_bouncer:
        type: boolean
        default: false
      timeout-minutes:
        type: number
        required: false
        default: 120
jobs:
  bouncer:
    runs-on: ubuntu-20.04
    timeout-minutes: ${{ inputs.timeout-minutes }}
    services:
      bitcoin:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-bitcoin-regtest:v24.0.1
        ports:
          - 8332:8332
      polkadot:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-private-polkadot/polkadot:v0.9.36-ci
        ports:
          - 9934:9933
          - 9945:9944
      geth:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-eth-contracts/geth:v0.7.0-1-node
        ports:
          - 30303:30303
          - 30303:30303/udp
          - 8545:8545
          - 8546:8546
          - 8551:8551
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@v3

      - name: Setup ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null 
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list 
          sudo apt update 
          sudo apt install ngrok

      - name: Configure NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y bc xxd

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin

      - name: Install node dependencies
        working-directory: bouncer
        run: pnpm install

      - name: Start a localnet
        env:
          BINARIES_LOCATION: .
        run: |
          echo -n ${{ secrets.CF_LOCALNET_SIGNING_KEY }} > ./localnet/init/secrets/signing_key_file
          echo -n ${{ secrets.CF_LOCALNET_NODE_KEY }} > ./localnet/init/secrets/node_key_file
          echo -n ${{ secrets.CF_LOCALNET_ETH_PRIVATE_KEY }} > ./localnet/init/secrets/eth_private_key_file
          chmod +x ${{ env.BINARIES_LOCATION }}/chainflip-*
          ./localnet/manage.sh

      - name: Expose endpoints for Polkadot and Chainflip
        env:
          NGROK_AUTHTOKEN: ${{ secrets.CF_NGROK_AUTHTOKEN }}
        run: |
          ngrok http http://localhost:9944 > /dev/null &
          ngrok http http://localhost:9945 > /dev/null &

      - name: Run EinfachHeuteLeiderNicht.exe
        if: inputs.simple_bouncer
        working-directory: bouncer
        run: |
          ./run_simple.sh

      - name: Run HeuteLeiderNicht.exe
        id: heuteleidernicht
        if: ${{ ! inputs.simple_bouncer }}
        working-directory: bouncer
        run: |
          ./run.sh

      - name: Print chainflip-engine logs
        if: failure()
        run: |
          cat /tmp/chainflip/chainflip-engine.log

      - name: Print chainflip-node logs
        if: failure()
        run: |
          cat /tmp/chainflip/chainflip-node.log

      - name: Upload Localnet Logs 💾
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: localnet-logs
          path: |
            /tmp/chainflip/chainflip-*.log

      - name: Notify on failed bouncer
        if: failure() && github.ref_name == 'main' || cancelled() && github.ref_name == 'main'
        env:
          DISCORD_USERNAME: 'HEUTE LEIDER NICHT'
          DISCORD_WEBHOOK: ${{ secrets.CF_DISCORD_ALERTS_CRITICAL }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            ❗️❗️❗️❗️ Sorry **${{ github.actor }}**, the Bouncer has rejected you ❗️❗️❗️❗️
            👾 Link to job: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            #️⃣ Tagging: <@&939151218708709416>
            https://media.giphy.com/media/wHfwCBZzCMhmE/giphy.gif

  benchmarks:
    runs-on: [hetzner]
    timeout-minutes: ${{ inputs.timeout-minutes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download previously built binaries
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin
          path: ./target/release

      - name: Run benchmarks
        run: |
          chmod +x ./target/release/chainflip-node
          ./state-chain/scripts/benchmark-all.sh --binary ./target/release/chainflip-node --steps 2 --repetitions 1