name: Release production binaries
on:
  workflow_dispatch:

jobs:
  set-variables:
    runs-on: ubuntu-20.04
    outputs:
      commit_hash: ${{ steps.commit_hash.outputs.commit_hash }}
      branch_name: ${{ steps.branch_name.outputs.branch_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse --verify HEAD)
          echo "commit_hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
      - id: branch_name
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

  build-and-test:
    name: Build and test production binaries
    runs-on: [hetzner]
    needs: [set-variables]
    container:
      image: 'ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16'
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      COMMIT_HASH: ${{ needs.set-variables.outputs.commit_hash }}
      BRANCH_NAME: ${{ needs.set-variables.outputs.branch_name }}
    outputs:
      binary_version_cli: ${{ steps.set-binary-versions.outputs.binary_version_cli }}
      binary_version_node: ${{ steps.set-binary-versions.outputs.binary_version_node }}
      binary_version_engine: ${{ steps.set-binary-versions.outputs.binary_version_engine }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update APT
        run: apt-get update
      - name: cargo cf-build-ci
        run: |
          cargo cf-build-ci --locked
          # sccache --show-stats
      - name: cargo cf-test-ci --locked
        run: |
          cargo cf-test-ci --locked
          # sccache --show-stats
      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Build packages
        run: |
          cargo deb --no-build --no-strip -p chainflip-engine
          cargo deb --no-build --no-strip -p chainflip-cli
          cargo deb --no-build --no-strip -p chainflip-node
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-packages-prod
          path: target/debian/*.deb
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: chainflip-backend-bin
          path: |
            ./target/release/chainflip-node
            ./target/release/chainflip-engine
            ./target/release/chainflip-cli
            ./target/release/generate-genesis-keys
            ./target/release/wbuild/state-chain-runtime/state_chain_runtime.wasm
      - name: Check if building changes any files
        run: |
          git diff --exit-code
          git diff --cached --exit-code

      - name: Set Binary Version Outputs
        run: |
          echo "binary_version_cli=$(./target/release/chainflip-cli --version)" >> $GITHUB_OUTPUT
          echo "binary_version_node=$(./target/release/chainflip-node --version)" >> $GITHUB_OUTPUT
          echo "binary_version_engine=$(./target/release/chainflip-engine --version)" >> $GITHUB_OUTPUT

  deb-publish-prod:
    name: Publish Packages to APT repo
    needs: [set-variables, build-and-test]
    uses: ./.github/workflows/.deb-publish.yaml
    with:
      artifacts: chainflip-backend-packages-prod
      version: "perseverance/"
      environment: prod
      commit_hash: ${{ needs.set-variables.outputs.commit_hash }}
    secrets: inherit

  build-docker-images:
    runs-on: ubuntu-latest
    name: Trigger Public Docker Images Build ðŸª¼
    needs: [deb-publish-prod, build-and-test]
    steps:
      - name: Repository Dispatch to chainflip-dockbeats ðŸ¦•
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: chainflip-io/chainflip-dockbeats
          event-type: publish-docker-images
          token: ${{ secrets.CF_GITHUB_BOT_TOKEN  }}
          client-payload: '{"commit_sha": "${{ github.sha }}", "matrix": {"include": [{"binary":"chainflip-cli","version": "${{ needs.build-and-test.outputs.binary_version_cli }}"}, {"binary":"chainflip-node","version": "${{ needs.build-and-test.outputs.binary_version_node }}"}, {"binary":"chainflip-engine","version": "${{ needs.build-and-test.outputs.binary_version_engine }}"}]}}'