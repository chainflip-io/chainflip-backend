on:
  workflow_call:
    inputs:
      profile:
        default: release
        description: Profile to build
        type: string
      upload-name:
        default: chainflip-backend-bin
        description: Name of the folder to upload the binaries to
        type: string
      binary-subdir:
        default: release
        type: string
        description: Subdirectory of the target folder to upload

env:
  FORCE_COLOR: 1
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
  COMMIT_HASH: ${{ github.sha }}

jobs:
  compile:
    runs-on: [hetzner]
    strategy:
      fail-fast: false
      matrix:
        ubuntu_version: [20.04, 22.04]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2023-07-31-ubuntu-${{ matrix.ubuntu_version }}-27"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11

      - name: Setup sccache
        run: ./ci/scripts/install_sccache.sh $SCCACHE_VERSION

      - name: Build chainflip binaries
        run: |
          cargo cf-build-${{ inputs.profile }} --locked
          sccache --show-stats

      - name: Upload binary artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        with:
          name: ${{ inputs.upload-name }}-ubuntu-${{ matrix.ubuntu_version }}
          path: |
            ./target/${{ inputs.binary-subdir }}/chainflip-node
            ./target/${{ inputs.binary-subdir }}/chainflip-engine
            ./target/${{ inputs.binary-subdir }}/chainflip-cli
            ./target/${{ inputs.binary-subdir }}/generate-genesis-keys
            ./target/${{ inputs.binary-subdir }}/chainflip-broker-api
            ./target/${{ inputs.binary-subdir }}/chainflip-lp-api
            ./target/${{ inputs.binary-subdir }}/chainflip-ingress-egress-tracker

      - name: Upload runtime artifacts
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
        if: ${{ matrix.ubuntu_version == '22.04' }} # Only upload runtime once as it is the same for both versions
        with:
          name: chainflip-node-runtime-${{ inputs.profile }}
          path: |
            ./target/${{ inputs.binary-subdir }}/wbuild/state-chain-runtime/state_chain_runtime*.wasm
