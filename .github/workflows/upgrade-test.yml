name: Test upgrade

on:
  workflow_dispatch:
    inputs:
      # Allows us to create a workflow call that doesn't run the job
      # so that branch protection rules can skip when running on push, but not in merge queue.
      run-job:
        type: boolean
        description: "Run the upgrade test job"
        required: false
        default: true

  workflow_call:
    inputs:
      # Allows us to create a workflow call that doesn't run the job
      # so that branch protection rules can skip when running on push, but not in merge queue.
      run-job:
        type: boolean
        description: "Run the upgrade test job"
        required: false
        default: true
env:
  FORCE_COLOR: 1
  SOLANA_VERSION: v1.18.17
  SOLANA_PROGRAMS_VERSION: v1.0.1-swap-endpoint
  NODE_COUNT: "1-node"

permissions:
  packages: read
  contents: read

jobs:
  upgrade_test:
    runs-on: digitalocean
    # conservatively 1.5 hours. 2 bouncer runs need to occur.
    timeout-minutes: 90
    steps:
      - name: Checkout chainflip-backend 🛒
        if: inputs.run-job
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          fetch-depth: 0

      - name: Login to Github Container Registry 🔑
        if: inputs.run-job
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub 🔑
        if: inputs.run-job
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          username: ${{ secrets.CF_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CF_DOCKERHUB_TOKEN }}

      - name: Configure NodeJS 🛠️
        if: inputs.run-job
        uses: actions/setup-node@8f152de45cc393bb48ce5d89d36b731f54556e65
        with:
          node-version-file: ./bouncer/.nvmrc
          cache: "pnpm"
          cache-dependency-path: "bouncer/pnpm-lock.yaml"

      - name: Install system packages 💿
        if: inputs.run-job
        run: |
          sudo apt update
          sudo apt install -y bc xxd

      - name: Install wscat 🐈
        if: inputs.run-job
        run: |
          npm install -g wscat

      - name: Download try-runtime binary 📥
        if: inputs.run-job
        uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4
        with:
          repo: paritytech/try-runtime-cli
          tag: v0.7.0
          extension-matching: disable
          rename-to: try-runtime
          chmod: 0755

      - name: Read old version from CFE upgrade-utils
        if: inputs.run-job
        run: |
          OLD_VERSION=$(grep -oP 'pub const OLD_VERSION: &str = "\K[^"]+' ./engine-upgrade-utils/src/lib.rs)
          echo "OLD_VERSION=${OLD_VERSION}" >> $GITHUB_ENV
          echo "OLD_VERSION=${OLD_VERSION}"

      - name: Download upgrade-from binaries from S3 📥
        if: inputs.run-job
        run: |
          mkdir -p upgrade-from-bins; ( cd upgrade-from-bins
            curl https://artifacts.chainflip.io/${{ env.OLD_VERSION }}/chainflip-backend-bin.zip --output chainflip-backend-bin.zip
            unzip chainflip-backend-bin.zip -d .
            mv ./artifacts/chainflip-backend-bin/* .
          ); ls -l upgrade-from-bins

      - name: Permissions for latest binaries 🛡️
        if: inputs.run-job
        run: |
          chmod +x ./upgrade-from-bins/chainflip-*
          chmod +x ./upgrade-from-bins/engine-runner

      - name: Get version of the upgrade-from binaries ✍️
        if: inputs.run-job
        run: |
          set -x
          OLD_BIN_VERSION=$(./upgrade-from-bins/chainflip-node --version)
          echo $OLD_BIN_VERSION
          echo "OLD_BIN_VERSION=${OLD_BIN_VERSION}" >> $GITHUB_ENV
          OLD_BIN_COMMIT_HASH=$(echo $OLD_BIN_VERSION | sed 's/.*-\([a-f0-9]\{7,\}\)$/\1/')
          echo "Release version commit hash: $OLD_BIN_COMMIT_HASH"
          echo "OLD_BIN_COMMIT_HASH=${OLD_BIN_COMMIT_HASH}" >> $GITHUB_ENV

      - name: Download upgrade-to binaries 📥
        if: inputs.run-job && (github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'merge_group')
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: chainflip-backend-bin-try-runtime
          path: upgrade-to-bins

      - name: Download upgrade-to runtime 📥
        if: inputs.run-job && (github.event_name == 'push' || github.event_name == 'pull_request' || github.event_name == 'merge_group')
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16
        with:
          name: chainflip-node-runtime-try-runtime
          path: upgrade-to-runtime

      - name: Permissions for latest binaries 🛡️
        if: inputs.run-job
        run: |
          chmod +x ./upgrade-to-bins/chainflip-*
          chmod +x ./upgrade-to-bins/engine-runner

      - name: Get version of latest main ✍️
        if: inputs.run-job
        run: |
          set -x
          MAIN_VERSION=$(./upgrade-to-bins/chainflip-node --version)
          echo $MAIN_VERSION

      - name: Install solana ☀️
        if: inputs.run-job
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/$SOLANA_VERSION/install)"

      - name: Start a localnet from upgrade-from version 🚀
        if: inputs.run-job
        env:
          BINARY_ROOT_PATH: ./upgrade-from-bins
          DEBUG_OUTPUT_DESTINATION: /tmp/chainflip/debug.*log
        run: |
          git checkout ${{ env.OLD_BIN_COMMIT_HASH }}
          set -x
          export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"
          mkdir -p /tmp/chainflip/bashful
          mkdir -p /tmp/chainflip/doc
          mkdir -p /tmp/chainflip/dopey
          touch /tmp/chainflip/debug.log
          chmod +x ${{ env.BINARY_ROOT_PATH }}/chainflip-*
          chmod +x ${{ env.BINARY_ROOT_PATH }}/engine-runner
          echo "/usr/lib before copy of .so files"
          ls -l /usr/lib
          sudo cp ${{ env.BINARY_ROOT_PATH }}/libchainflip_engine_v*.so /usr/lib/
          sudo cp ./upgrade-to-bins/libchainflip_engine_v*.so /usr/lib/
          echo "/usr/lib after copy of .so files"
          ls -l /usr/lib
          touch ./localnet/.setup_complete
          # TODO: This is a temporary fix to allow the localnet docker-compose.yml from an older commit to run the latest solana programs version. Remove after 1.8 is released.
          sed -i 's|ghcr.io/chainflip-io/solana-localnet-ledger:v[0-9.]*|ghcr.io/chainflip-io/solana-localnet-ledger:${{ env.SOLANA_PROGRAMS_VERSION }}|g' localnet/docker-compose.yml
          ./localnet/manage.sh
          git reset --hard

      # TODO: This is a temporary workaround to insert the 1.8 image nonces. Remove after 1.8 is released.
      - name: Nonce workaround
        if: inputs.run-job
        run: |
          git checkout ${{ github.sha }}
          git rev-parse HEAD
          cd bouncer
          pnpm install --frozen-lockfile
          ./shared/force_sol_nonces.ts

      - name: Run bouncer on upgrade-from version 🙅‍♂️
        if: inputs.run-job
        id: pre-upgrade-bouncer
        run: |
          git checkout ${{ env.OLD_BIN_COMMIT_HASH }}
          git rev-parse HEAD
          cd bouncer
          pnpm install --frozen-lockfile
          ./run.sh

      - name: Upgrade network 🚀
        if: inputs.run-job
        shell: bash
        id: upgrade-network
        run: |
          git checkout ${{ github.sha }}
          git rev-parse HEAD
          cd bouncer
          pnpm install --frozen-lockfile
          ./commands/upgrade_network.ts prebuilt \
            --runtime ./../upgrade-to-runtime/state_chain_runtime.compact.compressed.wasm \
            --bins ./../upgrade-to-bins \
            --localnet_init ./../localnet/init \
            --oldVersion "${{ env.OLD_BIN_VERSION }}"

      - name: Run bouncer after upgrade 🙅‍♂️
        if: inputs.run-job
        id: post-upgrade-bouncer
        run: |
          git checkout ${{ github.sha }}
          git rev-parse HEAD
          cd bouncer
          pnpm install --frozen-lockfile
          ./tests/all_concurrent_tests.ts

      - name: Print chainflip-engine logs 🚗
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-engine.*log

      - name: Print solana logs ☀️
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/solana/*.log
          cat /tmp/solana/test-ledger/validator.log

      - name: Print new pre-upgrade chainflip-engine logs 🚗
        if: inputs.run-job
        # In the case of a compatible upgrade, we don't expect any logs here
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-engine-pre-upgrade.*log

      - name: Print new post-upgrade chainflip-engine logs 🚗
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-engine-post-upgrade.*log

      - name: Print chainflip-node logs 📡
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/*/chainflip-node.*log

      - name: Print chainflip-broker-api logs 💼
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/chainflip-broker-api.*log

      - name: Print chainflip-lp-api logs 🤑
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/chainflip-lp-api.*log

      - name: Print chainflip-deposit-monitor logs 🔬
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/chainflip-deposit-monitor.*log

      - name: Print localnet init debug logs 🕵️‍♂️
        if: inputs.run-job
        continue-on-error: true
        run: |
          cat /tmp/chainflip/debug.log

      - name: Upload Localnet Logs 💾
        if: inputs.run-job
        continue-on-error: true
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: localnet-logs-upgrade-test
          path: |
            /tmp/chainflip/*/chainflip-*.*log

      - name: Upload Chainflip Logs 💾
        if: inputs.run-job
        continue-on-error: true
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: chainflip-logs-upgrade-test
          path: |
            /tmp/chainflip/logs/*.log

      - name: Write chain explorer to file 📝
        if: failure()
        continue-on-error: true
        working-directory: bouncer
        run: |
          BLOCK_HEIGHT=$(curl -s -H "Content-Type: application/json" \
          -d '{"jsonrpc":"2.0","method":"chain_getHeader","params":[],"id":1}' \
          http://localhost:9944 \
          | jq -r '.result.number' \
          | xargs printf "%d\n")
          ./commands/explorer.ts 0 $BLOCK_HEIGHT > /tmp/chainflip/explorer.txt

      - name: Upload chain explorer 📤
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: chain-explorer-upgrade-test
          path: /tmp/chainflip/explorer.txt

      - name: Upload Snapshots 💾
        if: failure()
        continue-on-error: true
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: failure-snapshots
          path: |
            /tmp/chainflip/snapshots/*.snap

      - name: Clean Up docker containers 🧹
        if: inputs.run-job
        continue-on-error: true
        run: |
          ls -alR /tmp/chainflip
          docker compose -f localnet/docker-compose.yml -p "chainflip-localnet" logs
          docker compose -f localnet/docker-compose.yml -p "chainflip-localnet" down --volumes --remove-orphans

      - name: Notify on failed upgrade test 🚨
        if: failure() && github.ref_name == 'main' || cancelled() && github.ref_name == 'main'
        env:
          DISCORD_USERNAME: "Upgrade Test"
          DISCORD_WEBHOOK: ${{ secrets.CF_DISCORD_ALERTS_CRITICAL }}
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            ❗️❗️❗️❗️ Sorry **${{ github.actor }}**, The Upgrade Test has not passed ❗️❗️❗️❗️
            👾 Link to job: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>
