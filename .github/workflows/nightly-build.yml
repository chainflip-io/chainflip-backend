name: Nightly build
on:
  push:
  schedule:
    - cron: '0 0 * * *'
env:
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
jobs:
  build-nightly:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install docker
        run: |
          apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
          echo "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
          apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install sccache
        run: |
          curl -fsSL https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz -o /tmp/sccache.tar.gz && \
          tar -xzf /tmp/sccache.tar.gz -C /tmp && \
          cp /tmp/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/cargo/bin/sccache && \
          rm -rf /tmp/sccache.tar.gz /tmp/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl

      - name: Run Checks
        run: |
          docker -v
          node -v
          cargo -V
          sccache --show-stats

      - name: Build binaries
        run: cargo build

      - name: Checkout chainflip-bouncer
        uses: actions/checkout@v3
        with:
          repository: chainflip-io/chainflip-bouncer
          token: ${{ secrets.CF_GITHUB_BOT_TOKEN }}
          path: bouncer

      - name: npm install
        working-directory: bouncer
        run: npm i

      - name: Init localnet
        env:
          BINARIES_LOCATION: ./target/debug
        run: ./localnet/manage.sh

      - name: Run localnet checks
        run: |
          docker ps
          docker logs polkadot
          docker logs bitcoin
          tail /tmp/chainflip/chainflip*.log

      - name: Check blocks produced
        working-directory: bouncer
        run: |
          ./tests/produces_blocks.sh
          ./tests/stress_test.sh
