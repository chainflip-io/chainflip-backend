name: Nightly build
on:
  push:
  schedule:
    - cron: '0 0 * * *'
env:
  RUSTC_WRAPPER: sccache
  SCCACHE_CACHE_SIZE: 32G
  SCCACHE_VERSION: v0.4.1
  SCCACHE_REDIS: ${{ secrets.SCCACHE_REDIS }}
jobs:
  build-nightly:
    runs-on: [hetzner]
    container:
      image: "ghcr.io/${{ github.repository }}/rust-base:nightly-2022-12-16"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    services:
      bitcoin:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-bitcoin-regtest:v24.0.1
        ports:
          - 8332:8332
      polkadot:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/chainflip-private-polkadot/polkadot:v0.9.36-ci
        ports:
          # - 30333:30333 # p2p port
          - 9934:9933 # rpc port
          - 9945:9944 # ws port
      geth:
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        image: ghcr.io/chainflip-io/geth:perseverance-rc2-12s-ci
        ports:
          - 30303:30303
          - 30303:30303/udp
          - 8545:8545
          - 8546:8546
          - 8551:8551
    steps:
      - name: Checkout chainflip-backend
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install sccache
        run: |
          curl -fsSL https://github.com/mozilla/sccache/releases/download/${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl.tar.gz -o /tmp/sccache.tar.gz && \
          tar -xzf /tmp/sccache.tar.gz -C /tmp && \
          cp /tmp/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl/sccache /usr/local/cargo/bin/sccache && \
          rm -rf /tmp/sccache.tar.gz /tmp/sccache-${SCCACHE_VERSION}-x86_64-unknown-linux-musl

#      - name: Build binaries
#        run: cargo build
      - name: Get Ansible Inventory from Artifacts ðŸ“–
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-and-test.yaml
          github_token: ${{ secrets.CF_GITHUB_BOT_TOKEN }}
          run_id: 4730282801
          name: chainflip-backend-bin
          search_artifacts: true
          check_artifacts: true
          if_no_artifact_found: fail

      - name: Checkout chainflip-bouncer
        uses: actions/checkout@v3
        with:
          repository: chainflip-io/chainflip-bouncer
          token: ${{ secrets.CF_GITHUB_BOT_TOKEN }}
          path: bouncer

      - name: npm install
        working-directory: bouncer
        run: npm i

      - name: Init localnet
        env:
          BINARIES_LOCATION: .
        run: |
          chmod +x chainflip-node chainflip-engine
          echo -n ${{ secrets.CF_LOCALNET_SIGNING_KEY }} > ./localnet/init/secrets/signing_key_file
          echo -n ${{ secrets.CF_LOCALNET_NODE_KEY }} > ./localnet/init/secrets/node_key_file
          echo -n ${{ secrets.CF_LOCALNET_ETH_PRIVATE_KEY }} > ./localnet/init/secrets/eth_private_key_file
          ./localnet/manage.sh

      - name: Run HeuteLeiderNicht.exe
        working-directory: bouncer
        env:
          POLKADOT_ENDPOINT: ws://polkadot:9944
          BTC_ENDPOINT: http://bitcoin:8332
          ETH_ENDPOINT: http://geth:8545
        run: |
          ./tests/produces_blocks.sh
          ./tests/stress_test.sh 2
          ./commands/setup_vaults.sh
          ./commands/setup_swaps.sh
