[workspace]
resolver = "2"

members = [
  'foreign-chains/solana/sol-prim',
  'api/lib',
  'api/bin/chainflip-cli',
  'api/bin/chainflip-broker-api',
  'api/bin/chainflip-lp-api',
  'api/bin/chainflip-ingress-egress-tracker',
  'state-chain/chains',
  'state-chain/node',
  'state-chain/amm',
  'state-chain/pallets/cf-account-roles',
  'state-chain/pallets/cf-broadcast',
  'state-chain/pallets/cf-chain-tracking',
  'state-chain/pallets/cf-emissions',
  'state-chain/pallets/cf-environment',
  'state-chain/pallets/cf-flip',
  'state-chain/pallets/cf-funding',
  'state-chain/pallets/cf-governance',
  'state-chain/pallets/cf-ingress-egress',
  'state-chain/pallets/cf-lp',
  'state-chain/pallets/cf-pools',
  'state-chain/pallets/cf-reputation',
  'state-chain/pallets/cf-threshold-signature',
  'state-chain/pallets/cf-validator',
  'state-chain/pallets/cf-vaults',
  'state-chain/pallets/cf-swapping',
  'state-chain/pallets/cf-witnesser',
  'state-chain/pallets/cf-tokenholder-governance',
  'state-chain/pallets/cf-cfe-interface',
  'state-chain/cf-integration-tests',
  'state-chain/runtime-upgrade-utilities',
  'state-chain/runtime-utilities',
  'state-chain/test-utilities',
  'state-chain/runtime-utilities/macros',
  'state-chain/runtime',
  'state-chain/traits',
  'state-chain/primitives',
  'state-chain/cfe-events',
  'engine',
  'engine/generate-genesis-keys',
  'engine-runner-bin',
  'engine-upgrade-utils',
  'engine-proc-macros',
  'utilities',
  'state-chain/custom-rpc',
  'state-chain/cf-session-benchmarking',
  'engine/multisig',
]

[workspace.lints.clippy]
blocks_in_conditions = "allow"
thread-local-initializer-can-be-made-const = "allow"

# The list of dependencies below (which can be both direct and indirect dependencies) are crates
# that are suspected to be CPU-intensive, and that are unlikely to require debugging (as some of
# their debug info might be missing) or to require to be frequently recompiled. We compile these
# dependencies with `opt-level=3` even in "dev" mode in order to make "dev" mode more usable.
# The majority of these crates are cryptographic libraries.
#
# If you see an error mentioning "profile package spec ... did not match any packages", it
# probably concerns this list.
#
# This list is ordered alphabetically.
[profile.dev.package]
blake2 = { opt-level = 3 }
blake2b_simd = { opt-level = 3 }
chacha20poly1305 = { opt-level = 3 }
cranelift-codegen = { opt-level = 3 }
cranelift-wasm = { opt-level = 3 }
crc32fast = { opt-level = 3 }
crossbeam-deque = { opt-level = 3 }
crypto-mac = { opt-level = 3 }
curve25519-dalek = { opt-level = 3 }
ed25519-zebra = { opt-level = 3 }
flate2 = { opt-level = 3 }
futures-channel = { opt-level = 3 }
hashbrown = { opt-level = 3 }
hash-db = { opt-level = 3 }
hmac = { opt-level = 3 }
httparse = { opt-level = 3 }
integer-sqrt = { opt-level = 3 }
k256 = { opt-level = 3 }
keccak = { opt-level = 3 }
libm = { opt-level = 3 }
librocksdb-sys = { opt-level = 3 }
libsecp256k1 = { opt-level = 3 }
libz-sys = { opt-level = 3 }
mio = { opt-level = 3 }
nalgebra = { opt-level = 3 }
num-bigint = { opt-level = 3 }
parking_lot = { opt-level = 3 }
parking_lot_core = { opt-level = 3 }
percent-encoding = { opt-level = 3 }
primitive-types = { opt-level = 3 }
ring = { opt-level = 3 }
rustls = { opt-level = 3 }
secp256k1 = { opt-level = 3 }
sha2 = { opt-level = 3 }
sha3 = { opt-level = 3 }
smallvec = { opt-level = 3 }
snow = { opt-level = 3 }
twox-hash = { opt-level = 3 }
uint = { opt-level = 3 }
x25519-dalek = { opt-level = 3 }
yamux = { opt-level = 3 }
zeroize = { opt-level = 3 }

[profile.dev]
rpath = true

[profile.release]
# Substrate runtime requires unwinding.
panic = "unwind"
rpath = true

[profile.production]
inherits = "release"

# Sacrifice compile speed for execution speed by using optimization flags:

# https://doc.rust-lang.org/rustc/linker-plugin-lto.html
lto = "fat"
# https://doc.rust-lang.org/rustc/codegen-options/index.html#codegen-units
codegen-units = 1
