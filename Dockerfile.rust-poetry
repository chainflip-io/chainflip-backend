FROM python:bullseye

USER root

RUN apt-get update -y \
    && apt-get install -y curl \
       cmake \
       build-essential \
       clang \
       libclang-dev \
       lld \
       python3-dev

RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - && chown -R root:root /root
ENV PATH="/root/.poetry/bin:${PATH}"

RUN curl -fsSL https://deb.nodesource.com/setup_14.x | sh - \
    && apt-get install -y nodejs

RUN npm install --global ganache-cli \
    && ganache-cli --version

# Download rustup
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y

# Set environment
ENV PATH="/root/.cargo/bin:${PATH}"
ENV RUSTC_WRAPPER=sccache

# Download and install sccache https://github.com/mozilla/sccache
ARG SCCACHE_VER="0.2.15"
RUN curl -fsSLo /tmp/sccache.tgz \
 https://github.com/mozilla/sccache/releases/download/v${SCCACHE_VER}/sccache-v${SCCACHE_VER}-x86_64-unknown-linux-musl.tar.gz \
 && tar -xzf /tmp/sccache.tgz -C /tmp --strip-components=1 \
 && mv /tmp/sccache /usr/bin && chmod +x /usr/bin/sccache \
 && rm -rf /tmp/*

ARG NIGHTLY=nightly-2021-03-24
# Download and set nightly as the default Rust compiler
RUN rustup default ${NIGHTLY} \
    && rustup target add wasm32-unknown-unknown --toolchain ${NIGHTLY} \
    && rustup component add rustfmt \
    && rustup component add clippy

ENV DOCKERIZE_VERSION v0.6.1
RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \
    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz