image:
  repository: ghcr.io/chainflip-io/chainflip-node
  pullPolicy: IfNotPresent
  tag: ""
initContainer:
  image:
    repository: ghcr.io/chainflip-io/ubuntu
    pullPolicy: IfNotPresent
    tag: "20.04"

signingKeyFile: /etc/chainflip/keys/signing_key_file
nodeKeyFile: /etc/chainflip/keys/node_key_file
stateChainWsEndpoint: ws://localhost:9944

role: "archive" # genesis, archive, validator

engine:
  enabled: false
  image:
    tag: "latest"
    repository: ghcr.io/chainflip-io/chainflip-backend/chainflip-engine
    pullPolicy: IfNotPresent
  containerPort: 5555
  resources: {}
  existingDbPath: ""
  syncDb: false
  service:
    type: ClusterIP
    port: 80
    annotations: {}
  settings:
    node_p2p:
      node_key_file: /etc/chainflip/keys/node_key_file
      ip_address: ""
      port: 8078
      allow_local_ip: true
    state_chain:
      ws_endpoint: ""
      signing_key_file: /etc/chainflip/keys/signing_key_file
    eth:
      private_key_file: /etc/chainflip/keys/ethereum_key_file
      rpc:
        ws_endpoint: ""
        http_endpoint: ""
    arb:
     # Using Ethereum's private key for simplicity
      private_key_file: /etc/chainflip/keys/ethereum_key_file
      rpc:
        ws_endpoint: ""
        http_endpoint: ""        
    health_check:
      hostname: "0.0.0.0"
      port: 5555
    signing:
      db_file: /etc/chainflip/data.db
    dot:
      rpc:
        ws_endpoint: ""
        http_endpoint: ""
    btc:
      rpc:
        http_endpoint: ""
        basic_auth_user: "flip"
        basic_auth_password: "flip"

brokerApi:
  enabled: false
  image:
    tag: "latest"
    repository: ghcr.io/chainflip-io/chainflip-backend/chainflip-broker-api
    pullPolicy: IfNotPresent
  containerPort: 8080
  resources: {}

lpApi:
  enabled: false
  image:
    tag: "latest"
    repository: ghcr.io/chainflip-io/chainflip-backend/chainflip-lp-api
    pullPolicy: IfNotPresent
  containerPort: 10589
  resources: {}
#    limits:
#      cpu: 1500m
#      memory: 2048Mi
#    requests:
#      cpu: 500m
#      memory: 1024Mi

imagePullSecrets:
  - name: dockerconfigjson

service:
  type: ClusterIP
  port: 80
  annotations: {}

ingress:
  enabled: false
  ingressClassName: ""
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  hosts: []
  tls: {}

resources:
  limits:
    cpu: 1500m
    memory: 2048Mi
  requests:
    cpu: 500m
    memory: 1024Mi

secrets:
  existingOnePasswordSecret: ""
  ethEnvOnePasswordSecret: ""

cluster: ""
chain: ""
chainspec: ""
chainspecUrl: ""

ports:
  ipPort: "8078"
  wsPort: "9944"
  rpcPort: "9933"
  p2pPort: "30333"
  metricsPort: "9615"

extraArgs: {}

basePath: /etc/chainflip
purgeChain: false

datadbUrl: ""

bootnodes: []

persistence:
  size: 50Gi