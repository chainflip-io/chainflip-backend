apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "chainflip-node.fullname" . }}
  labels:
  {{- include "chainflip-node.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "chainflip-node.fullname" . }}
  selector:
    matchLabels:
  {{- include "chainflip-node.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8501"
      labels:
    {{- include "chainflip-node.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        {{- if .Values.purgeChain }}
        - name: purge-chain
          image: {{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}
          command: [ "/bin/bash" ]
          args:
            - -c
            - |
                echo "Purging the chain ..."
                rm -rf /etc/chainflip/chaindata/*
          volumeMounts:
            - name: {{ include "chainflip-node.fullname" . }}
              mountPath: {{ .Values.basePath | default "/etc/chainflip" }}/chaindata
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /usr/local/bin/chainflip-node
          args:
            - --base-path={{ .Values.basePath | default "/etc/chainflip" }}/chaindata
            - --bootnodes={{ .Values.bootnodes }}
            - --chain=/etc/chainflip/{{ .Values.chainspec }}
            - --node-key-file={{ .Values.basePath | default "/etc/chainflip" }}/keys/node_key_file
            - --prometheus-external
            - --state-cache-size=0
            - --sync=warp
            - --validator
          ports:
            - name: ws
              containerPort: {{ .Values.ports.wsPort | default "9944" }}
              protocol: TCP
            - name: rpc
              containerPort: {{ .Values.ports.rpcPort | default "9933" }}
              protocol: TCP
            - name: p2p
              containerPort: {{ .Values.ports.p2pPort | default "30333" }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.ports.metricsPort | default "9615" }}
              protocol: TCP
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: {{ include "chainflip-node.fullname" . }}
              mountPath: {{ .Values.basePath | default "/etc/chainflip" }}/chaindata
            - name: keys
              mountPath: {{ .Values.basePath | default "/etc/chainflip" }}/keys


      volumes:
        - name: keys
          secret:
            secretName: {{ .Values.secrets.existingOnePasswordSecret }}
            items:
              - key: signing-key
                path: signing_key_file
              - key: node-key
                path: node_key_file

  volumeClaimTemplates:
    - metadata:
        name: {{ include "chainflip-node.fullname" . }}
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: gp2
        resources:
          requests:
            storage: 50Gi