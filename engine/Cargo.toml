[package]
authors = ["Chainflip team <https://github.com/chainflip-io>"]
build = 'build.rs'
edition = '2021'
name = "chainflip-engine"
version = "1.7.0"

[lib]
crate-type = ["lib"]
name = "chainflip_engine"
path = 'src/lib.rs'

[lints]
workspace = true

[dependencies]
anyhow = "1.0"
async-broadcast = "0.5"
async-channel = "1.7.1"
async-trait = "0.1.49"
bincode = "1.3.3"
bitcoin = { version = "0.30.0", features = ["serde"] }
chrono = { version = "0.4.31", default-features = false, features = ["clock"] }
clap = { version = "4.5.3", features = ["derive", "env"] }
config = "0.13.1"
fs_extra = "1.2.0"
futures = "0.3.30"
futures-core = "0.3.14"
futures-util = "0.3.14"
hex = "0.4.3"
httparse = "1.4.1"
itertools = "0.13"

# Same version of jsonrpsee as the substrate version our StateChain is on.
jsonrpsee = { version = "0.23.2", features = ["full"] }

dyn-clone = "1.0.4"
ethbloom = "0.13"
ethers = { version = "2.0.8", features = ["rustls"] }
lazy_static = "1.4"
num-bigint = "0.4"
num-derive = "0.4"
num-traits = "0.2"
secp256k1 = "0.27"
serde = { version = "1.0.197", features = ["derive", "rc"] }
serde_json = "1.0"
sha2 = "0.10"
subxt = { version = "0.33.0", features = ["substrate-compat"] }
thiserror = "1.0.26"
tokio = { version = "1.22", features = ["full", "test-util"] }
tokio-stream = { version = "0.1.5", features = ["sync"] }
url = "2.4"
web3 = { version = "0.19", default-features = false, features = [
  "ws-tls-tokio",
] }
zeroize = "1.5.4"
curve25519-dalek = { version = "4.1.3", features = ["serde"] }
ed25519-dalek = "2.1.1"
pin-project = "1.0.12"
rand = "0.8.4"
reqwest = { version = "0.11.4", features = ["rustls-tls"] }
tracing = "0.1"
x25519-dalek = { version = "2.0", features = ["serde"] }
zmq = { git = "https://github.com/chainflip-io/rust-zmq.git", tag = "chainflip-v0.9.2+1", features = [
  "vendored",
] }
warp = { version = "0.3.6" }
regex = { version = "1" }
lazy_format = "2.0"

# Local deps
cf-chains = { path = "../state-chain/chains" }
cf-primitives = { path = "../state-chain/primitives" }
chainflip-node = { path = "../state-chain/node" }
custom-rpc = { path = "../state-chain/custom-rpc" }
engine-upgrade-utils = { path = "../engine-upgrade-utils" }
multisig = { path = "multisig" }
pallet-cf-account-roles = { path = "../state-chain/pallets/cf-account-roles" }
pallet-cf-broadcast = { path = "../state-chain/pallets/cf-broadcast" }
pallet-cf-chain-tracking = { path = "../state-chain/pallets/cf-chain-tracking" }
pallet-cf-elections = { path = "../state-chain/pallets/cf-elections" }
pallet-cf-environment = { path = "../state-chain/pallets/cf-environment" }
pallet-cf-flip = { path = "../state-chain/pallets/cf-flip" }
pallet-cf-governance = { path = "../state-chain/pallets/cf-governance" }
pallet-cf-ingress-egress = { path = "../state-chain/pallets/cf-ingress-egress" }
pallet-cf-reputation = { path = "../state-chain/pallets/cf-reputation" }
pallet-cf-funding = { path = "../state-chain/pallets/cf-funding" }
pallet-cf-swapping = { path = "../state-chain/pallets/cf-swapping" }
pallet-cf-threshold-signature = { path = "../state-chain/pallets/cf-threshold-signature" }
pallet-cf-validator = { path = "../state-chain/pallets/cf-validator" }
pallet-cf-vaults = { path = "../state-chain/pallets/cf-vaults" }
pallet-cf-witnesser = { path = "../state-chain/pallets/cf-witnesser" }
pallet-cf-cfe-interface = { path = "../state-chain/pallets/cf-cfe-interface" }
state-chain-runtime = { path = "../state-chain/runtime" }
utilities = { path = "../utilities" }
sol-prim = { path = "../foreign-chains/solana/sol-prim", features = [
  "pda",
  "str",
  "serde",
  "scale",
] }

# substrate deps
cf-amm = { path = "../state-chain/amm" }
codec = { package = "parity-scale-codec", version = "3.6.12", features = [
  "derive",
  "full",
] }
frame-support = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
frame-system = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
sc-rpc-api = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
sc-transaction-pool-api = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = 'chainflip-substrate-1.15.2+1' }
scale-info = { version = "2.11.1", features = ["derive"] }
sp-core = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
sp-rpc = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
sp-runtime = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
sp-version = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
substrate-frame-rpc-system = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }

frame-metadata = { version = "16.0.0", default-features = false, features = [
  "current",
] }
serde_bytes = "0.11.14"
bs58 = "0.5.1"
base64 = "0.22.1"

[dependencies.rocksdb]
version = "0.21.0"
# Disabling of default features, and using lz4 compression is primarily to avoid linker issues
# resulting from the default compression using libs that conflict with the system libs
# https://github.com/rust-rocksdb/rust-rocksdb/pull/555
default-features = false
features = ["lz4"]

[dev-dependencies]
csv = "1.1.6"
ethereum = "0.14"
mockall = "0.11.0"
multisig = { path = "multisig", features = ["test"] }
rlp = "0.5"
tempfile = "3.7.0"
utilities = { package = "utilities", path = "../utilities", features = [
  "test-utils",
] }
serde_path_to_error = "*"

[build-dependencies]
substrate-build-script-utils = { git = "https://github.com/chainflip-io/polkadot-sdk.git", tag = "chainflip-substrate-1.15.2+1" }
engine-upgrade-utils = { path = "../engine-upgrade-utils" }

[features]
integration-test = []
std = [
	"chainflip-node/std",
	"chrono/std",
	"custom-rpc/std",
	"engine-upgrade-utils/std",
	"frame-metadata/std",
	"multisig/std",
	"sol-prim/std",
	"zeroize/std",
	"itertools/use_std",
	"sc-rpc-api/std",
	"sc-transaction-pool-api/std",
	"sp-rpc/std",
	"substrate-frame-rpc-system/std"
]
runtime-benchmarks = [
	"cf-amm/runtime-benchmarks",
	"cf-chains/runtime-benchmarks",
	"cf-primitives/runtime-benchmarks",
	"chainflip-node/runtime-benchmarks",
	"custom-rpc/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"multisig/runtime-benchmarks",
	"pallet-cf-account-roles/runtime-benchmarks",
	"pallet-cf-broadcast/runtime-benchmarks",
	"pallet-cf-cfe-interface/runtime-benchmarks",
	"pallet-cf-chain-tracking/runtime-benchmarks",
	"pallet-cf-elections/runtime-benchmarks",
	"pallet-cf-environment/runtime-benchmarks",
	"pallet-cf-flip/runtime-benchmarks",
	"pallet-cf-funding/runtime-benchmarks",
	"pallet-cf-governance/runtime-benchmarks",
	"pallet-cf-ingress-egress/runtime-benchmarks",
	"pallet-cf-reputation/runtime-benchmarks",
	"pallet-cf-swapping/runtime-benchmarks",
	"pallet-cf-threshold-signature/runtime-benchmarks",
	"pallet-cf-validator/runtime-benchmarks",
	"pallet-cf-vaults/runtime-benchmarks",
	"pallet-cf-witnesser/runtime-benchmarks",
	"sol-prim/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"state-chain-runtime/runtime-benchmarks"
]
try-runtime = [
	"cf-chains/try-runtime",
	"cf-primitives/try-runtime",
	"chainflip-node/try-runtime",
	"custom-rpc/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"multisig/try-runtime",
	"pallet-cf-account-roles/try-runtime",
	"pallet-cf-broadcast/try-runtime",
	"pallet-cf-cfe-interface/try-runtime",
	"pallet-cf-chain-tracking/try-runtime",
	"pallet-cf-elections/try-runtime",
	"pallet-cf-environment/try-runtime",
	"pallet-cf-flip/try-runtime",
	"pallet-cf-funding/try-runtime",
	"pallet-cf-governance/try-runtime",
	"pallet-cf-ingress-egress/try-runtime",
	"pallet-cf-reputation/try-runtime",
	"pallet-cf-swapping/try-runtime",
	"pallet-cf-threshold-signature/try-runtime",
	"pallet-cf-validator/try-runtime",
	"pallet-cf-vaults/try-runtime",
	"pallet-cf-witnesser/try-runtime",
	"sp-runtime/try-runtime",
	"state-chain-runtime/try-runtime",
	"cf-amm/try-runtime"
]
