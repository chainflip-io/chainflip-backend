#!/bin/bash
set -e

CF_ROOT=/etc/chainflip
CF_ENGINE_TARGET_VERSION="0.9"
SYSTEMD_PATH=/etc/systemd/system
CF_ENGINE_CONFIG_FILE="$CF_ROOT/config/Settings.toml"

check_upgrade() {
    if [ "$1" != "upgrade" ]; then
        echo "chainflip-engine: Fresh install detected, skipping migration"
        exit 0
    else
        echo "chainflip-engine: Upgrade detected, migrating"
    fi
}

stop_service() {
    if systemctl is-active --quiet chainflip-engine; then
        if systemctl stop chainflip-engine; then
            echo "chainflip-engine stopped"
        else
            echo "Error stopping chainflip-engine"
            exit 1
        fi
    else
        echo "chainflip-engine is already stopped"
    fi
}

check_version() {
    CF_NODE_CURRENT_VERSION=$(chainflip-engine -V)
    if echo "$CF_NODE_CURRENT_VERSION" | grep $CF_ENGINE_TARGET_VERSION > /dev/null; then
        echo "chainflip-engine: skipping migration"
        exit 0
    else
        echo "chainflip-engine: Detected older version, migrating"
    fi
}

backup_and_remove_systemd_overrides() {
    if [ -f $SYSTEMD_PATH/chainflip-engine.service.d/override.conf ]; then
        echo "chainflip-engine: systemd overrides found - backing up and removing"
        mv $SYSTEMD_PATH/chainflip-engine.service.d/override.conf $SYSTEMD_PATH/chainflip-engine.service.d.bak/override.conf
    fi
}

remove_old_keyshares() {
    if [ -d "$CF_ROOT/data.db" ]; then
        echo "chainflip-engine: Removing old data.db directory"
        rm -rf "$CF_ROOT/data.db"
    fi
}

remove_old_logs() {
    if [ -f "/var/log/chainflip-engine.log" ]; then
        echo "chainflip-engine: Removing old log file"
        rm -rf "/var/log/chainflip-engine*"
    fi
}

update_engine_config() {
    echo "chainflip-engine: Updating engine config"
}

reload_systemctl() {
    systemctl daemon-reload
}

# Main entry point
main() {
    check_upgrade "$1"
    check_version
    stop_service
    remove_old_keyshares
    backup_and_remove_systemd_overrides
    remove_old_logs
    update_engine_config
    reload_systemctl
}

# Only run the main function if the script is not being sourced
# This allows you to source the script in your tests without running main
if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    main "$@"
fi

# #DEBHELPER#
