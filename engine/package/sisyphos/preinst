#!/bin/sh

set -e

if [ "$1" != "upgrade" ]; then
  echo "chainflip-engine: Fresh install detected, skipping migration"
  exit 0
fi

# Find and save to a var the location of the chainflip-engine binary.
CF_BIN_ROOT=$(which chainflip-engine | xargs dirname)

# Print the stdout (hiding stderr) and grep the version. This is rather ugly as the
# --version does not yet exist, but the build information contains the version.
CF_VERSION=$(chainflip-engine --version 2> /dev/null | grep -Po '\d+\.\d+\.\d+')
MAJOR=$(echo "$CF_VERSION" | awk -F. '{print $1}')
MINOR=$(echo "$CF_VERSION" | awk -F. '{print $2}')
PATCH=$(echo "$CF_VERSION" | awk -F. '{print $3}')

# Create a directory for old versions of the binary and copy the current version there.
# Migrate the binaries to run out of /usr/local/bin as creating directories in /usr/bin is
# bad practise.
VERSIONED_DIR="/usr/local/bin/chainflip/${MAJOR}.${MINOR}.${PATCH}"
mkdir -p "$VERSIONED_DIR"
cp "$CF_BIN_ROOT/chainflip-engine" "$VERSIONED_DIR/chainflip-engine"
cp "$CF_BIN_ROOT/chainflip-node" "$VERSIONED_DIR/chainflip-node"
cp "$CF_BIN_ROOT/chainflip-cli" "$VERSIONED_DIR/chainflip-cli"

echo "chainflip-engine: Migration completed successfully"

#DEBHELPER#

exit 0