
//! Autogenerated weights for pallet_cf_vaults
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-06-19, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ip-172-31-12-158`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// /usr/bin/chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_vaults
// --extrinsic
// *
// --output
// state-chain/pallets/cf-vaults/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_vaults.
pub trait WeightInfo {
	fn on_initialize_failure(b: u32, ) -> Weight;
	fn on_initialize_success() -> Weight;
	fn report_keygen_outcome() -> Weight;
	fn on_keygen_verification_result() -> Weight;
	fn vault_key_rotated() -> Weight;
	fn vault_key_rotated_externally() -> Weight;
	fn set_keygen_response_timeout() -> Weight;
}

/// Weights for pallet_cf_vaults using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:1 w:0)
	// Storage: EthereumVault KeygenFailureVoters (r:1 w:1)
	// Storage: Reputation Penalties (r:1 w:0)
	// Storage: Reputation Reputations (r:1 w:1)
	// Storage: Reputation Suspensions (r:1 w:1)
	// Storage: EthereumVault KeygenSlashRate (r:1 w:0)
	// Storage: Flip Account (r:1 w:0)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_failure(_b: u32, ) -> Weight {
		// Minimum execution time: 92_621 nanoseconds.
		Weight::from_ref_time(385_783_438)
			.saturating_add(T::DbWeight::get().reads(53))
			.saturating_add(T::DbWeight::get().writes(27))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureRequestIdCounter (r:1 w:1)
	// Storage: EthereumVault CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureResponseTimeout (r:1 w:0)
	// Storage: EthereumThresholdSigner CeremonyRetryQueues (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:0 w:1)
	// Storage: EthereumThresholdSigner Signature (r:0 w:1)
	// Storage: EthereumThresholdSigner PendingCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner RequestCallback (r:0 w:1)
	fn on_initialize_success() -> Weight {
		// Minimum execution time: 111_184 nanoseconds.
		Weight::from_ref_time(113_745_000)
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(9))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:1 w:1)
	fn report_keygen_outcome() -> Weight {
		// Minimum execution time: 75_286 nanoseconds.
		Weight::from_ref_time(76_763_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: EthereumThresholdSigner Signature (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:0 w:1)
	fn on_keygen_verification_result() -> Weight {
		// Minimum execution time: 38_645 nanoseconds.
		Weight::from_ref_time(39_647_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault CurrentVaultEpochAndState (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:0 w:1)
	fn vault_key_rotated() -> Weight {
		// Minimum execution time: 46_952 nanoseconds.
		Weight::from_ref_time(47_598_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Environment CurrentSystemState (r:1 w:1)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentVaultEpochAndState (r:0 w:1)
	fn vault_key_rotated_externally() -> Weight {
		// Minimum execution time: 50_168 nanoseconds.
		Weight::from_ref_time(51_079_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: EthereumVault KeygenResponseTimeout (r:1 w:1)
	fn set_keygen_response_timeout() -> Weight {
		// Minimum execution time: 29_474 nanoseconds.
		Weight::from_ref_time(31_377_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:1 w:0)
	// Storage: EthereumVault KeygenFailureVoters (r:1 w:1)
	// Storage: Reputation Penalties (r:1 w:0)
	// Storage: Reputation Reputations (r:1 w:1)
	// Storage: Reputation Suspensions (r:1 w:1)
	// Storage: EthereumVault KeygenSlashRate (r:1 w:0)
	// Storage: Flip Account (r:1 w:0)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_failure(_b: u32, ) -> Weight {
		// Minimum execution time: 92_621 nanoseconds.
		Weight::from_ref_time(385_783_438)
			.saturating_add(RocksDbWeight::get().reads(53))
			.saturating_add(RocksDbWeight::get().writes(27))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureRequestIdCounter (r:1 w:1)
	// Storage: EthereumVault CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureResponseTimeout (r:1 w:0)
	// Storage: EthereumThresholdSigner CeremonyRetryQueues (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:0 w:1)
	// Storage: EthereumThresholdSigner Signature (r:0 w:1)
	// Storage: EthereumThresholdSigner PendingCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner RequestCallback (r:0 w:1)
	fn on_initialize_success() -> Weight {
		// Minimum execution time: 111_184 nanoseconds.
		Weight::from_ref_time(113_745_000)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(9))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault KeygenSuccessVoters (r:1 w:1)
	fn report_keygen_outcome() -> Weight {
		// Minimum execution time: 75_286 nanoseconds.
		Weight::from_ref_time(76_763_000)
			.saturating_add(RocksDbWeight::get().reads(3))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: EthereumThresholdSigner Signature (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:0 w:1)
	fn on_keygen_verification_result() -> Weight {
		// Minimum execution time: 38_645 nanoseconds.
		Weight::from_ref_time(39_647_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault CurrentVaultEpochAndState (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:0 w:1)
	fn vault_key_rotated() -> Weight {
		// Minimum execution time: 46_952 nanoseconds.
		Weight::from_ref_time(47_598_000)
			.saturating_add(RocksDbWeight::get().reads(3))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Environment CurrentSystemState (r:1 w:1)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentVaultEpochAndState (r:0 w:1)
	fn vault_key_rotated_externally() -> Weight {
		// Minimum execution time: 50_168 nanoseconds.
		Weight::from_ref_time(51_079_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: EthereumVault KeygenResponseTimeout (r:1 w:1)
	fn set_keygen_response_timeout() -> Weight {
		// Minimum execution time: 29_474 nanoseconds.
		Weight::from_ref_time(31_377_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
}
