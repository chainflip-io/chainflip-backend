
//! Autogenerated weights for pallet_cf_vaults
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-03, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-9-222`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_vaults
// --extrinsic
// *
// --output
// state-chain/pallets/cf-vaults/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_vaults.
pub trait WeightInfo {
	fn vault_key_rotated() -> Weight;
	fn vault_key_rotated_externally() -> Weight;
}

/// Weights for pallet_cf_vaults using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {

	// Storage: EthereumVault PendingKeyRotation (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentKeyEpochAndState (r:0 w:1)
	fn vault_key_rotated() -> Weight {
		// Minimum execution time: 21_000 nanoseconds.
		Weight::from_parts(22_000_000, 0)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Environment CurrentSystemState (r:1 w:1)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentKeyEpochAndState (r:0 w:1)
	fn vault_key_rotated_externally() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `339`
		//  Estimated: `1824`
		// Minimum execution time: 24_581_000 picoseconds.
		Weight::from_parts(25_170_000, 1824)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {

	// Storage: EthereumVault PendingKeyRotation (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentKeyEpochAndState (r:0 w:1)
	fn vault_key_rotated() -> Weight {
		// Minimum execution time: 21_000 nanoseconds.
		Weight::from_parts(22_000_000, 0)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Environment CurrentSystemState (r:1 w:1)
	// Storage: EthereumVault Vaults (r:0 w:1)
	// Storage: EthereumVault CurrentKeyEpochAndState (r:0 w:1)
	fn vault_key_rotated_externally() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `339`
		//  Estimated: `1824`
		// Minimum execution time: 24_581_000 picoseconds.
		Weight::from_parts(25_170_000, 1824)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
