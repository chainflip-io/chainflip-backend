//! Autogenerated weights for pallet_cf_vaults
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-02-07, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/chainflip-node
// benchmark
// --extrinsic
// *
// --pallet
// pallet_cf_vaults
// --output
// state-chain/pallets/cf-vaults/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_vaults.
pub trait WeightInfo {
	fn on_initialize_failure(b: u32, ) -> Weight;
	fn on_initialize_success() -> Weight;
	fn report_keygen_outcome() -> Weight;
	fn vault_key_rotated() -> Weight;
}

/// Weights for pallet_cf_vaults using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	// Storage: EthereumVault KeygenResolutionPendingSince (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Reputation Reputations (r:102 w:0)
	// Storage: Auction CurrentAuctionIndex (r:1 w:0)
	// Storage: Auction CurrentPhase (r:0 w:1)
	fn on_initialize_failure(b: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 1_481_000
			.saturating_add((15_368_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(b as Weight)))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumVault KeygenResolutionPendingSince (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault ChainNonce (r:1 w:1)
	// Storage: EthereumThresholdSigner CeremonyIdCounter (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: Validator Validators (r:1 w:0)
	// Storage: Online Nodes (r:1 w:0)
	// Storage: EthereumThresholdSigner RetryQueues (r:1 w:1)
	// Storage: EthereumThresholdSigner PendingRequests (r:0 w:1)
	fn on_initialize_success() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(117_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(6 as Weight))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	fn report_keygen_outcome() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(69_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:2)
	fn vault_key_rotated() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(41_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: EthereumVault KeygenResolutionPendingSince (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Reputation Reputations (r:102 w:0)
	// Storage: Auction CurrentAuctionIndex (r:1 w:0)
	// Storage: Auction CurrentPhase (r:0 w:1)
	fn on_initialize_failure(b: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 1_481_000
			.saturating_add((15_368_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(b as Weight)))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumVault KeygenResolutionPendingSince (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: EthereumVault ChainNonce (r:1 w:1)
	// Storage: EthereumThresholdSigner CeremonyIdCounter (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: Validator Validators (r:1 w:0)
	// Storage: Online Nodes (r:1 w:0)
	// Storage: EthereumThresholdSigner RetryQueues (r:1 w:1)
	// Storage: EthereumThresholdSigner PendingRequests (r:0 w:1)
	fn on_initialize_success() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(117_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(9 as Weight))
			.saturating_add(RocksDbWeight::get().writes(6 as Weight))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	fn report_keygen_outcome() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(69_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:2)
	fn vault_key_rotated() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(41_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(3 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
}
