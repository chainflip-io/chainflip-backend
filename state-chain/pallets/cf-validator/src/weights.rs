
//! Autogenerated weights for pallet_cf_validator
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-15, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-5-75`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_validator
// --extrinsic
// *
// --output
// state-chain/pallets/cf-validator/src/weights.rs
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_validator.
pub trait WeightInfo {
	fn update_pallet_config() -> Weight;
	fn cfe_version() -> Weight;
	fn register_peer_id() -> Weight;
	fn set_vanity_name() -> Weight;
	fn expire_epoch(a: u32, ) -> Weight;
	fn missed_authorship_slots(m: u32, ) -> Weight;
	fn rotation_phase_idle() -> Weight;
	fn start_authority_rotation(a: u32, ) -> Weight;
	fn start_authority_rotation_while_disabled_by_safe_mode() -> Weight;
	fn rotation_phase_keygen(a: u32, ) -> Weight;
	fn rotation_phase_activating_keys(a: u32, ) -> Weight;
	fn register_as_validator() -> Weight;
}

/// Weights for pallet_cf_validator using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:0 w:1)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_pallet_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `433`
		//  Estimated: `1918`
		// Minimum execution time: 12_030_000 picoseconds.
		Weight::from_parts(13_111_000, 1918)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::NodeCFEVersion` (r:1 w:1)
	/// Proof: `Validator::NodeCFEVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn cfe_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `836`
		//  Estimated: `4301`
		// Minimum execution time: 19_186_000 picoseconds.
		Weight::from_parts(27_524_000, 4301)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::AccountPeerMapping` (r:1 w:1)
	/// Proof: `Validator::AccountPeerMapping` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MappedPeers` (r:1 w:1)
	/// Proof: `Validator::MappedPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn register_peer_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `888`
		//  Estimated: `4353`
		// Minimum execution time: 92_487_000 picoseconds.
		Weight::from_parts(93_355_000, 4353)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Validator::VanityNames` (r:1 w:1)
	/// Proof: `Validator::VanityNames` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_vanity_name() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `647`
		//  Estimated: `2132`
		// Minimum execution time: 15_966_000 picoseconds.
		Weight::from_parts(16_292_000, 2132)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalActiveEpochs` (r:150 w:150)
	/// Proof: `Validator::HistoricalActiveEpochs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalBonds` (r:1 w:0)
	/// Proof: `Validator::HistoricalBonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:150 w:150)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Witnesser::EpochsToCull` (r:1 w:1)
	/// Proof: `Witnesser::EpochsToCull` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::LastExpiredEpoch` (r:0 w:1)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn expire_epoch(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1656 + a * (87 ±0)`
		//  Estimated: `5028 + a * (2563 ±0)`
		// Minimum execution time: 53_917_000 picoseconds.
		Weight::from_parts(26_581_916, 5028)
			// Standard Error: 16_249
			.saturating_add(Weight::from_parts(9_869_215, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2563).saturating_mul(a.into()))
	}
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:1)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:3 w:3)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 10]`.
	fn missed_authorship_slots(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `933`
		//  Estimated: `5953 + m * (470 ±43)`
		// Minimum execution time: 31_813_000 picoseconds.
		Weight::from_parts(28_090_681, 5953)
			// Standard Error: 159_358
			.saturating_add(Weight::from_parts(8_163_448, 0).saturating_mul(m.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 470).saturating_mul(m.into()))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn rotation_phase_idle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `823`
		//  Estimated: `4288`
		// Minimum execution time: 18_281_000 picoseconds.
		Weight::from_parts(18_946_000, 4288)
			.saturating_add(T::DbWeight::get().reads(7_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:1 w:0)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::ActiveBidder` (r:404 w:0)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:403 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Reputation::LastHeartbeat` (r:403 w:0)
	/// Proof: `Reputation::LastHeartbeat` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AccountPeerMapping` (r:403 w:0)
	/// Proof: `Validator::AccountPeerMapping` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::NextKeys` (r:400 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:400 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::NodeCFEVersion` (r:400 w:0)
	/// Proof: `Validator::NodeCFEVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MinimumReportedCfeVersion` (r:1 w:0)
	/// Proof: `Validator::MinimumReportedCfeVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionBidCutoffPercentage` (r:1 w:0)
	/// Proof: `Validator::AuctionBidCutoffPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MaxAuthoritySetContractionPercentage` (r:1 w:0)
	/// Proof: `Validator::MaxAuthoritySetContractionPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `PolkadotThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `BitcoinThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 400]`.
	fn start_authority_rotation(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3156 + a * (510 ±0)`
		//  Estimated: `14033 + a * (2986 ±0)`
		// Minimum execution time: 236_645_000 picoseconds.
		Weight::from_parts(236_788_000, 14033)
			// Standard Error: 70_038
			.saturating_add(Weight::from_parts(28_920_974, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(30_u64))
			.saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(a.into())))
			.saturating_add(T::DbWeight::get().writes(11_u64))
			.saturating_add(Weight::from_parts(0, 2986).saturating_mul(a.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn start_authority_rotation_while_disabled_by_safe_mode() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `403`
		//  Estimated: `1888`
		// Minimum execution time: 6_799_000 picoseconds.
		Weight::from_parts(7_090_000, 1888)
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `PolkadotThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `BitcoinThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn rotation_phase_keygen(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3745 + a * (32 ±0)`
		//  Estimated: `7210 + a * (32 ±0)`
		// Minimum execution time: 92_029_000 picoseconds.
		Weight::from_parts(93_603_635, 7210)
			// Standard Error: 10_657
			.saturating_add(Weight::from_parts(263_516, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(14_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(a.into()))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn rotation_phase_activating_keys(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3349 + a * (32 ±0)`
		//  Estimated: `6814 + a * (32 ±0)`
		// Minimum execution time: 56_033_000 picoseconds.
		Weight::from_parts(57_713_336, 6814)
			// Standard Error: 4_542
			.saturating_add(Weight::from_parts(47_337, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(a.into()))
	}
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:1 w:0)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:1)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	fn register_as_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947`
		//  Estimated: `3498`
		// Minimum execution time: 22_342_000 picoseconds.
		Weight::from_parts(23_121_000, 3498)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:0 w:1)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_pallet_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `433`
		//  Estimated: `1918`
		// Minimum execution time: 12_030_000 picoseconds.
		Weight::from_parts(13_111_000, 1918)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::NodeCFEVersion` (r:1 w:1)
	/// Proof: `Validator::NodeCFEVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn cfe_version() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `836`
		//  Estimated: `4301`
		// Minimum execution time: 19_186_000 picoseconds.
		Weight::from_parts(27_524_000, 4301)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::AccountPeerMapping` (r:1 w:1)
	/// Proof: `Validator::AccountPeerMapping` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MappedPeers` (r:1 w:1)
	/// Proof: `Validator::MappedPeers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn register_peer_id() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `888`
		//  Estimated: `4353`
		// Minimum execution time: 92_487_000 picoseconds.
		Weight::from_parts(93_355_000, 4353)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Validator::VanityNames` (r:1 w:1)
	/// Proof: `Validator::VanityNames` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_vanity_name() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `647`
		//  Estimated: `2132`
		// Minimum execution time: 15_966_000 picoseconds.
		Weight::from_parts(16_292_000, 2132)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalActiveEpochs` (r:150 w:150)
	/// Proof: `Validator::HistoricalActiveEpochs` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalBonds` (r:1 w:0)
	/// Proof: `Validator::HistoricalBonds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:150 w:150)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Witnesser::EpochsToCull` (r:1 w:1)
	/// Proof: `Witnesser::EpochsToCull` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::LastExpiredEpoch` (r:0 w:1)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn expire_epoch(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1656 + a * (87 ±0)`
		//  Estimated: `5028 + a * (2563 ±0)`
		// Minimum execution time: 53_917_000 picoseconds.
		Weight::from_parts(26_581_916, 5028)
			// Standard Error: 16_249
			.saturating_add(Weight::from_parts(9_869_215, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((2_u64).saturating_mul(a.into())))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(a.into())))
			.saturating_add(Weight::from_parts(0, 2563).saturating_mul(a.into()))
	}
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:1)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:1)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:3 w:3)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `m` is `[1, 10]`.
	fn missed_authorship_slots(m: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `933`
		//  Estimated: `5953 + m * (470 ±43)`
		// Minimum execution time: 31_813_000 picoseconds.
		Weight::from_parts(28_090_681, 5953)
			// Standard Error: 159_358
			.saturating_add(Weight::from_parts(8_163_448, 0).saturating_mul(m.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 470).saturating_mul(m.into()))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn rotation_phase_idle() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `823`
		//  Estimated: `4288`
		// Minimum execution time: 18_281_000 picoseconds.
		Weight::from_parts(18_946_000, 4288)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:1 w:0)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::ActiveBidder` (r:404 w:0)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:403 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Reputation::LastHeartbeat` (r:403 w:0)
	/// Proof: `Reputation::LastHeartbeat` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AccountPeerMapping` (r:403 w:0)
	/// Proof: `Validator::AccountPeerMapping` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::NextKeys` (r:400 w:0)
	/// Proof: `Session::NextKeys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:400 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::NodeCFEVersion` (r:400 w:0)
	/// Proof: `Validator::NodeCFEVersion` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MinimumReportedCfeVersion` (r:1 w:0)
	/// Proof: `Validator::MinimumReportedCfeVersion` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionBidCutoffPercentage` (r:1 w:0)
	/// Proof: `Validator::AuctionBidCutoffPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::MaxAuthoritySetContractionPercentage` (r:1 w:0)
	/// Proof: `Validator::MaxAuthoritySetContractionPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `PolkadotThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `BitcoinThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 400]`.
	fn start_authority_rotation(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3156 + a * (510 ±0)`
		//  Estimated: `14033 + a * (2986 ±0)`
		// Minimum execution time: 236_645_000 picoseconds.
		Weight::from_parts(236_788_000, 14033)
			// Standard Error: 70_038
			.saturating_add(Weight::from_parts(28_920_974, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(30_u64))
			.saturating_add(RocksDbWeight::get().reads((7_u64).saturating_mul(a.into())))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
			.saturating_add(Weight::from_parts(0, 2986).saturating_mul(a.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn start_authority_rotation_while_disabled_by_safe_mode() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `403`
		//  Estimated: `1888`
		// Minimum execution time: 6_799_000 picoseconds.
		Weight::from_parts(7_090_000, 1888)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `PolkadotThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `BitcoinThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn rotation_phase_keygen(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3745 + a * (32 ±0)`
		//  Estimated: `7210 + a * (32 ±0)`
		// Minimum execution time: 92_029_000 picoseconds.
		Weight::from_parts(93_603_635, 7210)
			// Standard Error: 10_657
			.saturating_add(Weight::from_parts(263_516, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(14_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(a.into()))
	}
	/// Storage: `Validator::EpochExpiries` (r:1 w:0)
	/// Proof: `Validator::EpochExpiries` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Session::Validators` (r:1 w:0)
	/// Proof: `Session::Validators` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `System::Digest` (r:1 w:0)
	/// Proof: `System::Digest` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Proof: UNKNOWN KEY `0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380` (r:1 w:0)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:1)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `PolkadotThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `PolkadotThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `BitcoinThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `BitcoinThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[3, 150]`.
	fn rotation_phase_activating_keys(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `3349 + a * (32 ±0)`
		//  Estimated: `6814 + a * (32 ±0)`
		// Minimum execution time: 56_033_000 picoseconds.
		Weight::from_parts(57_713_336, 6814)
			// Standard Error: 4_542
			.saturating_add(Weight::from_parts(47_337, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 32).saturating_mul(a.into()))
	}
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuctionParameters` (r:1 w:0)
	/// Proof: `Validator::AuctionParameters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:1)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	fn register_as_validator() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `947`
		//  Estimated: `3498`
		// Minimum execution time: 22_342_000 picoseconds.
		Weight::from_parts(23_121_000, 3498)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
