//! Autogenerated weights for pallet_cf_validator
//!
//! THIS FILE WAS AUTO-GENERATED USING CHAINFLIP NODE BENCHMARK CMD VERSION 4.0.0-dev
//! DATE: 2022-10-24, STEPS: `20`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("three-node-test"), DB CACHE: 1024

// Executed Command:
// ./target/release/chainflip-node
// benchmark
// pallet
// --chain
// three-node-test
// --extrinsic
// *
// --pallet
// pallet_cf_validator
// --output
// state-chain/pallets/cf-validator/src/weights.rs
// --steps=20
// --repeat=1
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_validator.
pub trait WeightInfo {
	fn set_blocks_for_epoch() -> Weight;
	fn set_backup_reward_node_percentage() -> Weight;
	fn set_authority_set_min_size() -> Weight;
	fn cfe_version() -> Weight;
	fn register_peer_id() -> Weight;
	fn set_vanity_name() -> Weight;
	fn expire_epoch(a: u32, ) -> Weight;
	fn missed_authorship_slots(m: u32, ) -> Weight;
	fn rotation_phase_idle() -> Weight;
	fn start_authority_rotation(a: u32, ) -> Weight;
	fn start_authority_rotation_in_maintenance_mode() -> Weight;
	fn rotation_phase_vaults_rotating_pending(a: u32, ) -> Weight;
	fn rotation_phase_vaults_rotating_success(a: u32, ) -> Weight;
	fn rotation_phase_vaults_rotating_failure(o: u32, ) -> Weight;
	fn rotation_phase_vaults_rotated(a: u32, ) -> Weight;
	fn set_auction_parameters() -> Weight;
}

/// Weights for pallet_cf_validator using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: Validator BlocksPerEpoch (r:1 w:1)
	fn set_blocks_for_epoch() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(17_000_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Validator BackupRewardNodePercentage (r:0 w:1)
	fn set_backup_reward_node_percentage() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(15_000_000)
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuthoritySetMinSize (r:0 w:1)
	fn set_authority_set_min_size() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(14_000_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: Validator NodeCFEVersion (r:1 w:1)
	fn cfe_version() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(20_000_000)
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: Validator AccountPeerMapping (r:1 w:1)
	// Storage: Validator MappedPeers (r:1 w:1)
	fn register_peer_id() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(58_000_000)
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	// Storage: Validator VanityNames (r:1 w:1)
	fn set_vanity_name() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(14_000_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: Validator HistoricalActiveEpochs (r:3 w:3)
	// Storage: Validator HistoricalBonds (r:1 w:0)
	// Storage: Flip Account (r:3 w:3)
	// Storage: Witnesser EpochsToCull (r:1 w:1)
	// Storage: Validator LastExpiredEpoch (r:0 w:1)
	// Storage: Reputation Reputations (r:5 w:5)
	fn expire_epoch(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(0)
			// Standard Error: 348_000
			.saturating_add(Weight::from_ref_time(11_775_000).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().reads(3).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().writes(3).saturating_mul(a as u64))
	}
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Reputation Penalties (r:1 w:0)
	// Storage: Reputation Reputations (r:1 w:1)
	// Storage: Reputation Suspensions (r:1 w:1)
	fn missed_authorship_slots(m: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(20_867_000)
			// Standard Error: 420_000
			.saturating_add(Weight::from_ref_time(5_461_000).saturating_mul(m as u64))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: Validator CurrentEpochStartedAt (r:1 w:0)
	// Storage: Validator BlocksPerEpoch (r:1 w:0)
	fn rotation_phase_idle() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(11_000_000)
			.saturating_add(T::DbWeight::get().reads(6))
	}
	// Storage: Environment CurrentSystemState (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuctionParameters (r:1 w:0)
	// Storage: Staking ActiveBidder (r:7 w:0)
	// Storage: Flip Account (r:6 w:0)
	// Storage: Reputation LastHeartbeat (r:6 w:0)
	// Storage: Validator AccountPeerMapping (r:6 w:0)
	// Storage: Session NextKeys (r:3 w:0)
	// Storage: AccountRoles AccountRoles (r:3 w:0)
	// Storage: Validator Backups (r:1 w:0)
	// Storage: Validator BackupRewardNodePercentage (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	fn start_authority_rotation(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(1_189_000)
			// Standard Error: 211_000
			.saturating_add(Weight::from_ref_time(28_441_000).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().reads(21))
			.saturating_add(T::DbWeight::get().reads(6).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Environment CurrentSystemState (r:1 w:0)
	fn start_authority_rotation_in_maintenance_mode() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(2_000_000)
			.saturating_add(T::DbWeight::get().reads(1))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:0)
	fn rotation_phase_vaults_rotating_pending(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(11_972_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(32_000).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().reads(5))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:0)
	fn rotation_phase_vaults_rotating_success(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(21_744_000)
			// Standard Error: 8_000
			.saturating_add(Weight::from_ref_time(50_000).saturating_mul(a as u64))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator AuctionParameters (r:1 w:0)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	fn rotation_phase_vaults_rotating_failure(o: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(60_124_000)
			// Standard Error: 98_000
			.saturating_add(Weight::from_ref_time(184_000)
.saturating_mul(o as u64)
)
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	fn rotation_phase_vaults_rotated(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(9_735_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(28_000)
.saturating_mul(a as u64)
)
			.saturating_add(T::DbWeight::get().reads(4))
	}
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuctionParameters (r:0 w:1)
	fn set_auction_parameters() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(17_000_000)
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: Validator BlocksPerEpoch (r:1 w:1)
	fn set_blocks_for_epoch() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(17_000_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Validator BackupRewardNodePercentage (r:0 w:1)
	fn set_backup_reward_node_percentage() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(15_000_000)
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuthoritySetMinSize (r:0 w:1)
	fn set_authority_set_min_size() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(14_000_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: Validator NodeCFEVersion (r:1 w:1)
	fn cfe_version() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(20_000_000)
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: Validator AccountPeerMapping (r:1 w:1)
	// Storage: Validator MappedPeers (r:1 w:1)
	fn register_peer_id() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(58_000_000)
			.saturating_add(RocksDbWeight::get().reads(3))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	// Storage: Validator VanityNames (r:1 w:1)
	fn set_vanity_name() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(14_000_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: Validator HistoricalActiveEpochs (r:3 w:3)
	// Storage: Validator HistoricalBonds (r:1 w:0)
	// Storage: Flip Account (r:3 w:3)
	// Storage: Witnesser EpochsToCull (r:1 w:1)
	// Storage: Validator LastExpiredEpoch (r:0 w:1)
	// Storage: Reputation Reputations (r:5 w:5)
	fn expire_epoch(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(0)
			// Standard Error: 348_000
			.saturating_add(Weight::from_ref_time(11_775_000).saturating_mul(a as u64))
			.saturating_add(RocksDbWeight::get().reads(3).saturating_mul(a as u64))
			.saturating_add(RocksDbWeight::get().writes(3).saturating_mul(a as u64))
	}
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Reputation Penalties (r:1 w:0)
	// Storage: Reputation Reputations (r:1 w:1)
	// Storage: Reputation Suspensions (r:1 w:1)
	fn missed_authorship_slots(m: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(20_867_000)
			// Standard Error: 420_000
			.saturating_add(Weight::from_ref_time(5_461_000).saturating_mul(m as u64))
			.saturating_add(RocksDbWeight::get().reads(7))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: Validator CurrentEpochStartedAt (r:1 w:0)
	// Storage: Validator BlocksPerEpoch (r:1 w:0)
	fn rotation_phase_idle() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(11_000_000)
			.saturating_add(RocksDbWeight::get().reads(6))
	}
	// Storage: Environment CurrentSystemState (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuctionParameters (r:1 w:0)
	// Storage: Staking ActiveBidder (r:7 w:0)
	// Storage: Flip Account (r:6 w:0)
	// Storage: Reputation LastHeartbeat (r:6 w:0)
	// Storage: Validator AccountPeerMapping (r:6 w:0)
	// Storage: Session NextKeys (r:3 w:0)
	// Storage: AccountRoles AccountRoles (r:3 w:0)
	// Storage: Validator Backups (r:1 w:0)
	// Storage: Validator BackupRewardNodePercentage (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	fn start_authority_rotation(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(1_189_000)
			// Standard Error: 211_000
			.saturating_add(Weight::from_ref_time(28_441_000)
.saturating_mul(a as u64)
)
			.saturating_add(RocksDbWeight::get().reads(21))
			.saturating_add(RocksDbWeight::get().reads(6).saturating_mul(a as u64))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: Environment CurrentSystemState (r:1 w:0)
	fn start_authority_rotation_in_maintenance_mode() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(2_000_000)
			.saturating_add(RocksDbWeight::get().reads(1))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:0)
	fn rotation_phase_vaults_rotating_pending(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(11_972_000)
			// Standard Error: 4_000
			.saturating_add(Weight::from_ref_time(32_000)
.saturating_mul(a as u64)
)
			.saturating_add(RocksDbWeight::get().reads(5))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:0)
	fn rotation_phase_vaults_rotating_success(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(21_744_000)
			// Standard Error: 8_000
			.saturating_add(Weight::from_ref_time(50_000)
.saturating_mul(a as u64)
)
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:1)
	// Storage: EthereumVault PendingVaultRotation (r:1 w:1)
	// Storage: Validator AuctionParameters (r:1 w:0)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: EthereumVault KeygenResolutionPendingSince (r:0 w:1)
	fn rotation_phase_vaults_rotating_failure(o: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(60_124_000)
			// Standard Error: 98_000
			.saturating_add(Weight::from_ref_time(184_000)
.saturating_mul(o as u64)
)
			.saturating_add(RocksDbWeight::get().reads(7))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	// Storage: Validator EpochExpiries (r:1 w:0)
	// Storage: System Digest (r:1 w:0)
	// Storage: unknown [0xac56b214382d772914db46f9c4a772eda7d533d63f25202626db56d673717380] (r:1 w:0)
	// Storage: Validator CurrentRotationPhase (r:1 w:0)
	fn rotation_phase_vaults_rotated(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(9_735_000)
			// Standard Error: 5_000
			.saturating_add(Weight::from_ref_time(28_000)
.saturating_mul(a as u64)
)
			.saturating_add(RocksDbWeight::get().reads(4))
	}
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: Validator AuctionParameters (r:0 w:1)
	fn set_auction_parameters() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		Weight::from_ref_time(17_000_000)
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
}
