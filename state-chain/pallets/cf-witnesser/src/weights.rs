
//! Autogenerated weights for pallet_cf_witnesser
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-02-23, STEPS: `20`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `JamiesM1.local`, CPU: `<UNKNOWN>`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./target/release/chainflip-node
// benchmark
// pallet
// --extrinsic
// *
// --pallet
// pallet_cf_witnesser
// --output
// state-chain/pallets/cf-witnesser/src/weights.rs
// --steps=20
// --repeat=20
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_witnesser.
pub trait WeightInfo {
	fn witness_at_epoch() -> Weight;
	fn prewitness() -> Weight;
	fn remove_storage_items(n: u32, ) -> Weight;
	fn on_idle_with_nothing_to_remove() -> Weight;
}

/// Weights for pallet_cf_witnesser using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::LastExpiredEpoch` (r:1 w:0)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuthorityIndex` (r:1 w:0)
	/// Proof: `Validator::AuthorityIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::Votes` (r:1 w:1)
	/// Proof: `Witnesser::Votes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::CallHashExecuted` (r:2 w:1)
	/// Proof: `Witnesser::CallHashExecuted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::ExtraCallData` (r:1 w:0)
	/// Proof: `Witnesser::ExtraCallData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::WitnessDeadline` (r:1 w:1)
	/// Proof: `Witnesser::WitnessDeadline` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn witness_at_epoch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1525`
		//  Estimated: `7465`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(50_000_000, 7465)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	fn prewitness() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_000_000 picoseconds.
		Weight::from_parts(5_000_000, 0)
	}
	/// Storage: `Witnesser::Votes` (r:254 w:254)
	/// Proof: `Witnesser::Votes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 255]`.
	fn remove_storage_items(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `192 + n * (38 ±0)`
		//  Estimated: `1182 + n * (2513 ±0)`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_735_965, 1182)
			// Standard Error: 2_921
			.saturating_add(Weight::from_parts(988_737, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2513).saturating_mul(n.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::LastExpiredEpoch` (r:1 w:0)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::WitnessedCallsScheduledForDispatch` (r:1 w:1)
	/// Proof: `Witnesser::WitnessedCallsScheduledForDispatch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::EpochsToCull` (r:1 w:0)
	/// Proof: `Witnesser::EpochsToCull` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_idle_with_nothing_to_remove() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `891`
		//  Estimated: `2376`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 2376)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::LastExpiredEpoch` (r:1 w:0)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::AuthorityIndex` (r:1 w:0)
	/// Proof: `Validator::AuthorityIndex` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::Votes` (r:1 w:1)
	/// Proof: `Witnesser::Votes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::CallHashExecuted` (r:2 w:1)
	/// Proof: `Witnesser::CallHashExecuted` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::ExtraCallData` (r:1 w:0)
	/// Proof: `Witnesser::ExtraCallData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::WitnessDeadline` (r:1 w:1)
	/// Proof: `Witnesser::WitnessDeadline` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn witness_at_epoch() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1525`
		//  Estimated: `7465`
		// Minimum execution time: 49_000_000 picoseconds.
		Weight::from_parts(50_000_000, 7465)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	fn prewitness() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 5_000_000 picoseconds.
		Weight::from_parts(5_000_000, 0)
	}
	/// Storage: `Witnesser::Votes` (r:254 w:254)
	/// Proof: `Witnesser::Votes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 255]`.
	fn remove_storage_items(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `192 + n * (38 ±0)`
		//  Estimated: `1182 + n * (2513 ±0)`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_735_965, 1182)
			// Standard Error: 2_921
			.saturating_add(Weight::from_parts(988_737, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(n.into())))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(n.into())))
			.saturating_add(Weight::from_parts(0, 2513).saturating_mul(n.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::LastExpiredEpoch` (r:1 w:0)
	/// Proof: `Validator::LastExpiredEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::WitnessedCallsScheduledForDispatch` (r:1 w:1)
	/// Proof: `Witnesser::WitnessedCallsScheduledForDispatch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Witnesser::EpochsToCull` (r:1 w:0)
	/// Proof: `Witnesser::EpochsToCull` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_idle_with_nothing_to_remove() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `891`
		//  Estimated: `2376`
		// Minimum execution time: 14_000_000 picoseconds.
		Weight::from_parts(15_000_000, 2376)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
