//! Autogenerated weights for pallet_cf_tokenholder_governance
//!
//! THIS FILE WAS AUTO-GENERATED USING CHAINFLIP NODE BENCHMARK CMD VERSION 4.0.0-dev
//! DATE: 2022-10-11, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_tokenholder_governance
// --extrinsic
// *
// --output
// state-chain/pallets/cf-tokenholder-governance/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_tokenholder_governance.
pub trait WeightInfo {
	fn on_initialize_resolve_votes(a: u32, ) -> Weight;
	fn on_initialize_execute_proposal() -> Weight;
	fn submit_proposal() -> Weight;
	fn back_proposal(a: u32, ) -> Weight;
}

/// Weights for pallet_cf_tokenholder_governance using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	// Storage: TokenholderGovernance Proposals (r:1 w:1)
	// Storage: TokenholderGovernance Backers (r:1 w:1)
	// Storage: Flip Account (r:10 w:0)
	// Storage: Flip TotalIssuance (r:1 w:0)
	// Storage: Flip OffchainFunds (r:1 w:0)
	// Storage: TokenholderGovernance CommKeyUpdateAwaitingEnactment (r:1 w:0)
	// Storage: TokenholderGovernance GovKeyUpdateAwaitingEnactment (r:0 w:1)
	fn on_initialize_resolve_votes(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 17_000
			.saturating_add((6_019_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: TokenholderGovernance Proposals (r:1 w:0)
	// Storage: TokenholderGovernance GovKeyUpdateAwaitingEnactment (r:1 w:1)
	// Storage: Environment KeyManagerAddress (r:1 w:0)
	// Storage: Environment EthereumChainId (r:1 w:0)
	// Storage: Environment GlobalSignatureNonce (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureRequestIdCounter (r:1 w:1)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: Validator EpochAuthorityCount (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumThresholdSigner ThresholdSignatureResponseTimeout (r:1 w:0)
	// Storage: EthereumThresholdSigner RetryQueues (r:1 w:1)
	// Storage: TokenholderGovernance CommKeyUpdateAwaitingEnactment (r:1 w:0)
	// Storage: EthereumThresholdSigner OpenRequests (r:0 w:1)
	// Storage: EthereumThresholdSigner Signatures (r:0 w:1)
	// Storage: EthereumThresholdSigner PendingCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner LiveCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner RequestCallback (r:0 w:1)
	fn on_initialize_execute_proposal() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(113_816_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(14 as Weight))
			.saturating_add(T::DbWeight::get().writes(10 as Weight))
	}
	// Storage: Flip Account (r:1 w:1)
	// Storage: Flip TotalIssuance (r:1 w:1)
	// Storage: TokenholderGovernance Backers (r:0 w:1)
	// Storage: TokenholderGovernance Proposals (r:0 w:1)
	fn submit_proposal() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(44_850_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: TokenholderGovernance Backers (r:1 w:1)
	fn back_proposal(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(13_703_000 as Weight)
			// Standard Error: 0
			.saturating_add((45_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: TokenholderGovernance Proposals (r:1 w:1)
	// Storage: TokenholderGovernance Backers (r:1 w:1)
	// Storage: Flip Account (r:10 w:0)
	// Storage: Flip TotalIssuance (r:1 w:0)
	// Storage: Flip OffchainFunds (r:1 w:0)
	// Storage: TokenholderGovernance CommKeyUpdateAwaitingEnactment (r:1 w:0)
	// Storage: TokenholderGovernance GovKeyUpdateAwaitingEnactment (r:0 w:1)
	fn on_initialize_resolve_votes(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 17_000
			.saturating_add((6_019_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(a as Weight)))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: TokenholderGovernance Proposals (r:1 w:0)
	// Storage: TokenholderGovernance GovKeyUpdateAwaitingEnactment (r:1 w:1)
	// Storage: Environment KeyManagerAddress (r:1 w:0)
	// Storage: Environment EthereumChainId (r:1 w:0)
	// Storage: Environment GlobalSignatureNonce (r:1 w:1)
	// Storage: EthereumThresholdSigner ThresholdSignatureRequestIdCounter (r:1 w:1)
	// Storage: Validator CeremonyIdCounter (r:1 w:1)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: Validator EpochAuthorityCount (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumThresholdSigner ThresholdSignatureResponseTimeout (r:1 w:0)
	// Storage: EthereumThresholdSigner RetryQueues (r:1 w:1)
	// Storage: TokenholderGovernance CommKeyUpdateAwaitingEnactment (r:1 w:0)
	// Storage: EthereumThresholdSigner OpenRequests (r:0 w:1)
	// Storage: EthereumThresholdSigner Signatures (r:0 w:1)
	// Storage: EthereumThresholdSigner PendingCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner LiveCeremonies (r:0 w:1)
	// Storage: EthereumThresholdSigner RequestCallback (r:0 w:1)
	fn on_initialize_execute_proposal() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(113_816_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(14 as Weight))
			.saturating_add(RocksDbWeight::get().writes(10 as Weight))
	}
	// Storage: Flip Account (r:1 w:1)
	// Storage: Flip TotalIssuance (r:1 w:1)
	// Storage: TokenholderGovernance Backers (r:0 w:1)
	// Storage: TokenholderGovernance Proposals (r:0 w:1)
	fn submit_proposal() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(44_850_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
	// Storage: TokenholderGovernance Backers (r:1 w:1)
	fn back_proposal(a: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(13_703_000 as Weight)
			// Standard Error: 0
			.saturating_add((45_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
