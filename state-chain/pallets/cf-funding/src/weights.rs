
//! Autogenerated weights for pallet_cf_funding
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-15, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-5-75`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_funding
// --extrinsic
// *
// --output
// state-chain/pallets/cf-funding/src/weights.rs
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_funding.
pub trait WeightInfo {
	fn funded() -> Weight;
	fn redeem() -> Weight;
	fn redeem_all() -> Weight;
	fn redeemed() -> Weight;
	fn redemption_expired() -> Weight;
	fn stop_bidding() -> Weight;
	fn start_bidding() -> Weight;
	fn update_minimum_funding() -> Weight;
	fn update_redemption_tax() -> Weight;
	fn bind_redeem_address() -> Weight;
	fn update_restricted_addresses(a: u32, b: u32, c: u32, ) -> Weight;
	fn bind_executor_address() -> Weight;
}

/// Weights for pallet_cf_funding using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `Flip::OffchainFunds` (r:1 w:1)
	/// Proof: `Flip::OffchainFunds` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:1 w:0)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:0 w:1)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	fn funded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1074`
		//  Estimated: `4539`
		// Minimum execution time: 46_013_000 picoseconds.
		Weight::from_parts(46_708_000, 4539)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedBalances` (r:1 w:0)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:0)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:0)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Funding::MinimumFunding` (r:1 w:0)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::RedemptionTTLSeconds` (r:1 w:0)
	/// Proof: `Funding::RedemptionTTLSeconds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumStateChainGatewayAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumStateChainGatewayAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:0 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2339`
		//  Estimated: `13229`
		// Minimum execution time: 152_994_000 picoseconds.
		Weight::from_parts(153_812_000, 13229)
			.saturating_add(T::DbWeight::get().reads(36_u64))
			.saturating_add(T::DbWeight::get().writes(15_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedBalances` (r:1 w:0)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:0)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:0)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::RedemptionTTLSeconds` (r:1 w:0)
	/// Proof: `Funding::RedemptionTTLSeconds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumStateChainGatewayAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumStateChainGatewayAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:0 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	fn redeem_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2336`
		//  Estimated: `13226`
		// Minimum execution time: 151_783_000 picoseconds.
		Weight::from_parts(153_728_000, 13226)
			.saturating_add(T::DbWeight::get().reads(35_u64))
			.saturating_add(T::DbWeight::get().writes(15_u64))
	}
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:1 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Flip::OffchainFunds` (r:1 w:1)
	/// Proof: `Flip::OffchainFunds` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn redeemed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `924`
		//  Estimated: `4389`
		// Minimum execution time: 30_066_000 picoseconds.
		Weight::from_parts(30_710_000, 4389)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:1 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:1 w:0)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn redemption_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1367`
		//  Estimated: `4832`
		// Minimum execution time: 45_451_000 picoseconds.
		Weight::from_parts(46_871_000, 4832)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::ActiveBidder` (r:1 w:1)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn stop_bidding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1513`
		//  Estimated: `4978`
		// Minimum execution time: 34_992_000 picoseconds.
		Weight::from_parts(35_297_000, 4978)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ActiveBidder` (r:1 w:1)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_bidding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1130`
		//  Estimated: `4595`
		// Minimum execution time: 24_527_000 picoseconds.
		Weight::from_parts(24_844_000, 4595)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::MinimumFunding` (r:0 w:1)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_minimum_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `139`
		//  Estimated: `1624`
		// Minimum execution time: 8_906_000 picoseconds.
		Weight::from_parts(9_380_000, 1624)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::MinimumFunding` (r:1 w:0)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:0 w:1)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_redemption_tax() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `139`
		//  Estimated: `1624`
		// Minimum execution time: 9_387_000 picoseconds.
		Weight::from_parts(10_282_000, 1624)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:1)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bind_redeem_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `136`
		//  Estimated: `3601`
		// Minimum execution time: 11_822_000 picoseconds.
		Weight::from_parts(12_172_000, 3601)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::RestrictedBalances` (r:101 w:100)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:0 w:1)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	/// The range of component `b` is `[1, 100]`.
	/// The range of component `c` is `[1, 100]`.
	fn update_restricted_addresses(_a: u32, b: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166 + c * (92 ±0)`
		//  Estimated: `3629 + b * (9 ±1) + c * (2567 ±1)`
		// Minimum execution time: 316_417_000 picoseconds.
		Weight::from_parts(317_350_000, 3629)
			// Standard Error: 4_581_527
			.saturating_add(Weight::from_parts(179_174_955, 0).saturating_mul(b.into()))
			// Standard Error: 4_581_527
			.saturating_add(Weight::from_parts(175_251_011, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 9).saturating_mul(b.into()))
			.saturating_add(Weight::from_parts(0, 2567).saturating_mul(c.into()))
	}
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:1)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bind_executor_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `136`
		//  Estimated: `3601`
		// Minimum execution time: 11_867_000 picoseconds.
		Weight::from_parts(12_320_000, 3601)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `Flip::OffchainFunds` (r:1 w:1)
	/// Proof: `Flip::OffchainFunds` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:1 w:0)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:0 w:1)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	fn funded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1074`
		//  Estimated: `4539`
		// Minimum execution time: 46_013_000 picoseconds.
		Weight::from_parts(46_708_000, 4539)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedBalances` (r:1 w:0)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:0)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:0)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Funding::MinimumFunding` (r:1 w:0)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::RedemptionTTLSeconds` (r:1 w:0)
	/// Proof: `Funding::RedemptionTTLSeconds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumStateChainGatewayAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumStateChainGatewayAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:0 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	fn redeem() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2339`
		//  Estimated: `13229`
		// Minimum execution time: 152_994_000 picoseconds.
		Weight::from_parts(153_812_000, 13229)
			.saturating_add(RocksDbWeight::get().reads(36_u64))
			.saturating_add(RocksDbWeight::get().writes(15_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedBalances` (r:1 w:0)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:0)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:0)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Timestamp::Now` (r:1 w:0)
	/// Proof: `Timestamp::Now` (`max_values`: Some(1), `max_size`: Some(8), added: 503, mode: `MaxEncodedLen`)
	/// Storage: `Funding::RedemptionTTLSeconds` (r:1 w:0)
	/// Proof: `Funding::RedemptionTTLSeconds` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumStateChainGatewayAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumStateChainGatewayAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:0 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	fn redeem_all() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2336`
		//  Estimated: `13226`
		// Minimum execution time: 151_783_000 picoseconds.
		Weight::from_parts(153_728_000, 13226)
			.saturating_add(RocksDbWeight::get().reads(35_u64))
			.saturating_add(RocksDbWeight::get().writes(15_u64))
	}
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:1 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Flip::OffchainFunds` (r:1 w:1)
	/// Proof: `Flip::OffchainFunds` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	fn redeemed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `924`
		//  Estimated: `4389`
		// Minimum execution time: 30_066_000 picoseconds.
		Weight::from_parts(30_710_000, 4389)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `Funding::PendingRedemptions` (r:1 w:1)
	/// Proof: `Funding::PendingRedemptions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::PendingRedemptionsReserve` (r:1 w:1)
	/// Proof: `Flip::PendingRedemptionsReserve` (`max_values`: None, `max_size`: Some(64), added: 2539, mode: `MaxEncodedLen`)
	/// Storage: `Flip::Account` (r:1 w:1)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// Storage: `Flip::TotalIssuance` (r:1 w:1)
	/// Proof: `Flip::TotalIssuance` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::Backups` (r:1 w:1)
	/// Proof: `Validator::Backups` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:1 w:0)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn redemption_expired() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1367`
		//  Estimated: `4832`
		// Minimum execution time: 45_451_000 picoseconds.
		Weight::from_parts(46_871_000, 4832)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Validator::CurrentRotationPhase` (r:1 w:0)
	/// Proof: `Validator::CurrentRotationPhase` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpochStartedAt` (r:1 w:0)
	/// Proof: `Validator::CurrentEpochStartedAt` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::RedemptionPeriodAsPercentage` (r:1 w:0)
	/// Proof: `Validator::RedemptionPeriodAsPercentage` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::BlocksPerEpoch` (r:1 w:0)
	/// Proof: `Validator::BlocksPerEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::ActiveBidder` (r:1 w:1)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn stop_bidding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1513`
		//  Estimated: `4978`
		// Minimum execution time: 34_992_000 picoseconds.
		Weight::from_parts(35_297_000, 4978)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `Funding::ActiveBidder` (r:1 w:1)
	/// Proof: `Funding::ActiveBidder` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_bidding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1130`
		//  Estimated: `4595`
		// Minimum execution time: 24_527_000 picoseconds.
		Weight::from_parts(24_844_000, 4595)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::RedemptionTax` (r:1 w:0)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::MinimumFunding` (r:0 w:1)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_minimum_funding() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `139`
		//  Estimated: `1624`
		// Minimum execution time: 8_906_000 picoseconds.
		Weight::from_parts(9_380_000, 1624)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::MinimumFunding` (r:1 w:0)
	/// Proof: `Funding::MinimumFunding` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RedemptionTax` (r:0 w:1)
	/// Proof: `Funding::RedemptionTax` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_redemption_tax() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `139`
		//  Estimated: `1624`
		// Minimum execution time: 9_387_000 picoseconds.
		Weight::from_parts(10_282_000, 1624)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::BoundRedeemAddress` (r:1 w:1)
	/// Proof: `Funding::BoundRedeemAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bind_redeem_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `136`
		//  Estimated: `3601`
		// Minimum execution time: 11_822_000 picoseconds.
		Weight::from_parts(12_172_000, 3601)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Funding::RestrictedBalances` (r:101 w:100)
	/// Proof: `Funding::RestrictedBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Funding::RestrictedAddresses` (r:0 w:1)
	/// Proof: `Funding::RestrictedAddresses` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	/// The range of component `b` is `[1, 100]`.
	/// The range of component `c` is `[1, 100]`.
	fn update_restricted_addresses(_a: u32, b: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `166 + c * (92 ±0)`
		//  Estimated: `3629 + b * (9 ±1) + c * (2567 ±1)`
		// Minimum execution time: 316_417_000 picoseconds.
		Weight::from_parts(317_350_000, 3629)
			// Standard Error: 4_581_527
			.saturating_add(Weight::from_parts(179_174_955, 0).saturating_mul(b.into()))
			// Standard Error: 4_581_527
			.saturating_add(Weight::from_parts(175_251_011, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 9).saturating_mul(b.into()))
			.saturating_add(Weight::from_parts(0, 2567).saturating_mul(c.into()))
	}
	/// Storage: `Funding::BoundExecutorAddress` (r:1 w:1)
	/// Proof: `Funding::BoundExecutorAddress` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn bind_executor_address() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `136`
		//  Estimated: `3601`
		// Minimum execution time: 11_867_000 picoseconds.
		Weight::from_parts(12_320_000, 3601)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
