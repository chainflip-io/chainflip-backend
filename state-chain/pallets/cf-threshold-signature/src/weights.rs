
//! Autogenerated weights for pallet_cf_threshold_signature
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-03-15, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-5-75`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_threshold_signature
// --extrinsic
// *
// --output
// state-chain/pallets/cf-threshold-signature/src/weights.rs
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_threshold_signature.
pub trait WeightInfo {
	fn signature_success() -> Weight;
	fn report_signature_failed(a: u32, ) -> Weight;
	fn set_threshold_signature_timeout() -> Weight;
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight;
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight;
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight;
	fn report_offenders(o: u32, ) -> Weight;
	fn report_keygen_outcome() -> Weight;
	fn on_keygen_verification_result() -> Weight;
	fn set_keygen_response_timeout() -> Weight;
}

/// Weights for pallet_cf_threshold_signature using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingRequestInstructions` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingRequestInstructions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn signature_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `616`
		//  Estimated: `4081`
		// Minimum execution time: 28_431_000 picoseconds.
		Weight::from_parts(28_998_000, 4081)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn report_signature_failed(_a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1434`
		//  Estimated: `4899`
		// Minimum execution time: 33_100_000 picoseconds.
		Weight::from_parts(34_619_188, 4899)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_threshold_signature_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `259`
		//  Estimated: `1744`
		// Minimum execution time: 9_806_000 picoseconds.
		Weight::from_parts(10_062_000, 1744)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenFailureVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenFailureVoters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:47 w:47)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSlashAmount` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::KeygenSlashAmount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:47 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16388 + b * (31 ±0)`
		//  Estimated: `20061 + b * (2555 ±0)`
		// Minimum execution time: 87_190_000 picoseconds.
		Weight::from_parts(257_263_188, 20061)
			.saturating_add(T::DbWeight::get().reads(57_u64))
			.saturating_add(T::DbWeight::get().writes(28_u64))
			.saturating_add(Weight::from_parts(0, 2555).saturating_mul(b.into()))
	}
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `10520`
		//  Estimated: `16460`
		// Minimum execution time: 94_425_000 picoseconds.
		Weight::from_parts(95_272_000, 16460)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:50 w:100)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[10, 150]`.
	/// The range of component `r` is `[0, 50]`.
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1552 + a * (32 ±0) + r * (384 ±0)`
		//  Estimated: `12444 + a * (34 ±0) + r * (2859 ±0)`
		// Minimum execution time: 18_572_000 picoseconds.
		Weight::from_parts(58_054_032, 12444)
			// Standard Error: 18_322
			.saturating_add(Weight::from_parts(7_277, 0).saturating_mul(a.into()))
			// Standard Error: 50_937
			.saturating_add(Weight::from_parts(27_946_828, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 34).saturating_mul(a.into()))
			.saturating_add(Weight::from_parts(0, 2859).saturating_mul(r.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:100 w:100)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `o` is `[1, 100]`.
	fn report_offenders(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `4103 + o * (2475 ±0)`
		// Minimum execution time: 20_029_000 picoseconds.
		Weight::from_parts(14_861_166, 4103)
			// Standard Error: 11_349
			.saturating_add(Weight::from_parts(4_188_196, 0).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(o.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(o.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn report_keygen_outcome() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15055`
		//  Estimated: `18520`
		// Minimum execution time: 58_404_000 picoseconds.
		Weight::from_parts(59_160_000, 18520)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumThresholdSigner::Signature` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_keygen_verification_result() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `3965`
		// Minimum execution time: 16_867_000 picoseconds.
		Weight::from_parts(17_768_000, 3965)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumThresholdSigner::KeygenResponseTimeout` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_keygen_response_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `286`
		//  Estimated: `1771`
		// Minimum execution time: 10_928_000 picoseconds.
		Weight::from_parts(11_257_000, 1771)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingRequestInstructions` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingRequestInstructions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn signature_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `616`
		//  Estimated: `4081`
		// Minimum execution time: 28_431_000 picoseconds.
		Weight::from_parts(28_998_000, 4081)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn report_signature_failed(_a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1434`
		//  Estimated: `4899`
		// Minimum execution time: 33_100_000 picoseconds.
		Weight::from_parts(34_619_188, 4899)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_threshold_signature_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `259`
		//  Estimated: `1744`
		// Minimum execution time: 9_806_000 picoseconds.
		Weight::from_parts(10_062_000, 1744)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenFailureVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenFailureVoters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:47 w:47)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSlashAmount` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::KeygenSlashAmount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:47 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16388 + b * (31 ±0)`
		//  Estimated: `20061 + b * (2555 ±0)`
		// Minimum execution time: 87_190_000 picoseconds.
		Weight::from_parts(257_263_188, 20061)
			.saturating_add(RocksDbWeight::get().reads(57_u64))
			.saturating_add(RocksDbWeight::get().writes(28_u64))
			.saturating_add(Weight::from_parts(0, 2555).saturating_mul(b.into()))
	}
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::Signature` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `10520`
		//  Estimated: `16460`
		// Minimum execution time: 94_425_000 picoseconds.
		Weight::from_parts(95_272_000, 16460)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EthereumThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingCeremonies` (r:50 w:100)
	/// Proof: `EthereumThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EthereumThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[10, 150]`.
	/// The range of component `r` is `[0, 50]`.
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1552 + a * (32 ±0) + r * (384 ±0)`
		//  Estimated: `12444 + a * (34 ±0) + r * (2859 ±0)`
		// Minimum execution time: 18_572_000 picoseconds.
		Weight::from_parts(58_054_032, 12444)
			// Standard Error: 18_322
			.saturating_add(Weight::from_parts(7_277, 0).saturating_mul(a.into()))
			// Standard Error: 50_937
			.saturating_add(Weight::from_parts(27_946_828, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 34).saturating_mul(a.into()))
			.saturating_add(Weight::from_parts(0, 2859).saturating_mul(r.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:100 w:100)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `o` is `[1, 100]`.
	fn report_offenders(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `638`
		//  Estimated: `4103 + o * (2475 ±0)`
		// Minimum execution time: 20_029_000 picoseconds.
		Weight::from_parts(14_861_166, 4103)
			// Standard Error: 11_349
			.saturating_add(Weight::from_parts(4_188_196, 0).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(o.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(o.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn report_keygen_outcome() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15055`
		//  Estimated: `18520`
		// Minimum execution time: 58_404_000 picoseconds.
		Weight::from_parts(59_160_000, 18520)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumThresholdSigner::Signature` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumThresholdSigner::PendingKeyRotation` (r:0 w:1)
	/// Proof: `EthereumThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_keygen_verification_result() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `3965`
		// Minimum execution time: 16_867_000 picoseconds.
		Weight::from_parts(17_768_000, 3965)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumThresholdSigner::KeygenResponseTimeout` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::KeygenResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_keygen_response_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `286`
		//  Estimated: `1771`
		// Minimum execution time: 10_928_000 picoseconds.
		Weight::from_parts(11_257_000, 1771)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
