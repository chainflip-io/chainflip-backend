
//! Autogenerated weights for pallet_cf_threshold_signature
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-08-26, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-10-39`, CPU: `Intel(R) Xeon(R) Platinum 8124M CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_threshold_signature
// --extrinsic
// *
// --output
// state-chain/pallets/cf-threshold-signature/src/weights.rs
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_threshold_signature.
pub trait WeightInfo {
	fn signature_success() -> Weight;
	fn report_signature_failed(a: u32, ) -> Weight;
	fn set_threshold_signature_timeout() -> Weight;
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight;
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight;
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight;
	fn report_offenders(o: u32, ) -> Weight;
	fn report_keygen_outcome() -> Weight;
	fn on_keygen_verification_result() -> Weight;
	fn set_keygen_response_timeout() -> Weight;
}

/// Weights for pallet_cf_threshold_signature using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingRequestInstructions` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingRequestInstructions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn signature_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `654`
		//  Estimated: `4119`
		// Minimum execution time: 35_095_000 picoseconds.
		Weight::from_parts(36_047_000, 4119)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn report_signature_failed(_a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1530`
		//  Estimated: `4995`
		// Minimum execution time: 34_331_000 picoseconds.
		Weight::from_parts(35_562_630, 4995)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_threshold_signature_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `1711`
		// Minimum execution time: 10_190_000 picoseconds.
		Weight::from_parts(10_811_000, 1711)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenFailureVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenFailureVoters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:47 w:47)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSlashAmount` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::KeygenSlashAmount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:47 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16557 + b * (30 ±0)`
		//  Estimated: `20263 + b * (2555 ±0)`
		// Minimum execution time: 93_526_000 picoseconds.
		Weight::from_parts(274_624_061, 20263)
			.saturating_add(T::DbWeight::get().reads(57_u64))
			.saturating_add(T::DbWeight::get().writes(28_u64))
			.saturating_add(Weight::from_parts(0, 2555).saturating_mul(b.into()))
	}
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `10579`
		//  Estimated: `16519`
		// Minimum execution time: 106_417_000 picoseconds.
		Weight::from_parts(108_854_000, 16519)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(11_u64))
	}
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:50 w:100)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[10, 150]`.
	/// The range of component `r` is `[0, 50]`.
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1735 + a * (32 ±0) + r * (384 ±0)`
		//  Estimated: `12627 + a * (34 ±0) + r * (2859 ±0)`
		// Minimum execution time: 21_479_000 picoseconds.
		Weight::from_parts(60_210_517, 12627)
			// Standard Error: 21_749
			.saturating_add(Weight::from_parts(5_396, 0).saturating_mul(a.into()))
			// Standard Error: 60_462
			.saturating_add(Weight::from_parts(29_662_083, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 34).saturating_mul(a.into()))
			.saturating_add(Weight::from_parts(0, 2859).saturating_mul(r.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:100 w:100)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `o` is `[1, 100]`.
	fn report_offenders(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `762`
		//  Estimated: `4227 + o * (2475 ±0)`
		// Minimum execution time: 20_889_000 picoseconds.
		Weight::from_parts(15_783_697, 4227)
			// Standard Error: 10_476
			.saturating_add(Weight::from_parts(4_391_611, 0).saturating_mul(o.into()))
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(o.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(o.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(o.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn report_keygen_outcome() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15174`
		//  Estimated: `18639`
		// Minimum execution time: 62_838_000 picoseconds.
		Weight::from_parts(63_982_000, 18639)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_keygen_verification_result() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `3965`
		// Minimum execution time: 17_605_000 picoseconds.
		Weight::from_parts(18_272_000, 3965)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::KeygenResponseTimeout` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_keygen_response_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `253`
		//  Estimated: `1738`
		// Minimum execution time: 11_395_000 picoseconds.
		Weight::from_parts(11_785_000, 1738)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingRequestInstructions` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingRequestInstructions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn signature_success() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `654`
		//  Estimated: `4119`
		// Minimum execution time: 35_095_000 picoseconds.
		Weight::from_parts(36_047_000, 4119)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn report_signature_failed(_a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1530`
		//  Estimated: `4995`
		// Minimum execution time: 34_331_000 picoseconds.
		Weight::from_parts(35_562_630, 4995)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_threshold_signature_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `226`
		//  Estimated: `1711`
		// Minimum execution time: 10_190_000 picoseconds.
		Weight::from_parts(10_811_000, 1711)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenFailureVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenFailureVoters` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:47 w:47)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSlashAmount` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::KeygenSlashAmount` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Flip::Account` (r:47 w:0)
	/// Proof: `Flip::Account` (`max_values`: None, `max_size`: Some(80), added: 2555, mode: `MaxEncodedLen`)
	/// The range of component `b` is `[1, 100]`.
	fn on_initialize_keygen_failure_no_pending_sig_ceremonies(b: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `16557 + b * (30 ±0)`
		//  Estimated: `20263 + b * (2555 ±0)`
		// Minimum execution time: 93_526_000 picoseconds.
		Weight::from_parts(274_624_061, 20263)
			.saturating_add(RocksDbWeight::get().reads(57_u64))
			.saturating_add(RocksDbWeight::get().writes(28_u64))
			.saturating_add(Weight::from_parts(0, 2555).saturating_mul(b.into()))
	}
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenResolutionPendingSince` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResolutionPendingSince` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_initialize_keygen_success_no_pending_sig_ceremonies() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `10579`
		//  Estimated: `16519`
		// Minimum execution time: 106_417_000 picoseconds.
		Weight::from_parts(108_854_000, 16519)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(11_u64))
	}
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:2 w:2)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:50 w:100)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestRetryQueue` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::RequestRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[10, 150]`.
	/// The range of component `r` is `[0, 50]`.
	fn on_initialize_no_keygen(a: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1735 + a * (32 ±0) + r * (384 ±0)`
		//  Estimated: `12627 + a * (34 ±0) + r * (2859 ±0)`
		// Minimum execution time: 21_479_000 picoseconds.
		Weight::from_parts(60_210_517, 12627)
			// Standard Error: 21_749
			.saturating_add(Weight::from_parts(5_396, 0).saturating_mul(a.into()))
			// Standard Error: 60_462
			.saturating_add(Weight::from_parts(29_662_083, 0).saturating_mul(r.into()))
			.saturating_add(RocksDbWeight::get().reads(13_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(r.into())))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
			.saturating_add(RocksDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 34).saturating_mul(a.into()))
			.saturating_add(Weight::from_parts(0, 2859).saturating_mul(r.into()))
	}
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Penalties` (r:1 w:0)
	/// Proof: `Reputation::Penalties` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Reputations` (r:100 w:100)
	/// Proof: `Reputation::Reputations` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:1 w:1)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `o` is `[1, 100]`.
	fn report_offenders(o: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `762`
		//  Estimated: `4227 + o * (2475 ±0)`
		// Minimum execution time: 20_889_000 picoseconds.
		Weight::from_parts(15_783_697, 4227)
			// Standard Error: 10_476
			.saturating_add(Weight::from_parts(4_391_611, 0).saturating_mul(o.into()))
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(o.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(o.into())))
			.saturating_add(Weight::from_parts(0, 2475).saturating_mul(o.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::KeygenSuccessVoters` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenSuccessVoters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn report_keygen_outcome() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15174`
		//  Estimated: `18639`
		// Minimum execution time: 62_838_000 picoseconds.
		Weight::from_parts(63_982_000, 18639)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingKeyRotation` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingKeyRotation` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn on_keygen_verification_result() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `500`
		//  Estimated: `3965`
		// Minimum execution time: 17_605_000 picoseconds.
		Weight::from_parts(18_272_000, 3965)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::KeygenResponseTimeout` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::KeygenResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn set_keygen_response_timeout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `253`
		//  Estimated: `1738`
		// Minimum execution time: 11_395_000 picoseconds.
		Weight::from_parts(11_785_000, 1738)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
