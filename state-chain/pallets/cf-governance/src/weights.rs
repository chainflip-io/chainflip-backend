//! Autogenerated weights for pallet_cf_governance
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-10-22, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Interpreted, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/state-chain-node
// benchmark
// --extrinsic
// *
// --pallet
// pallet_cf_governance
// --output
// state-chain/pallets/cf-governance/src/weights.rs
// --execution=wasm
// --steps=50
// --repeat=20
// --template=state-chain/chainflip-weight-template.hbs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_governance.
pub trait WeightInfo {
	fn propose_governance_extrinsic() -> Weight;
	fn approve() -> Weight;
	fn new_membership_set() -> Weight;
	fn call_as_sudo() -> Weight;
	fn on_initialize(b: u32, ) -> Weight;
	fn on_initialize_best_case() -> Weight;
	fn expire_proposals(b: u32, ) -> Weight;
}

/// Weights for pallet_cf_governance using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	fn propose_governance_extrinsic() -> Weight {
		(144_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	fn approve() -> Weight {
		(133_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn new_membership_set() -> Weight {
		(13_000_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn call_as_sudo() -> Weight {
		(81_000_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn on_initialize(b: u32, ) -> Weight {
		(28_128_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((8_420_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn on_initialize_best_case() -> Weight {
		(9_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
	}
	fn expire_proposals(b: u32, ) -> Weight {
		(62_320_000 as Weight)
			// Standard Error: 149_000
			.saturating_add((45_732_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn propose_governance_extrinsic() -> Weight {
		(144_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	fn approve() -> Weight {
		(133_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn new_membership_set() -> Weight {
		(13_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn call_as_sudo() -> Weight {
		(81_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn on_initialize(b: u32, ) -> Weight {
		(28_128_000 as Weight)
			// Standard Error: 18_000
			.saturating_add((8_420_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(2 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn on_initialize_best_case() -> Weight {
		(9_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
	}
	fn expire_proposals(b: u32, ) -> Weight {
		(62_320_000 as Weight)
			// Standard Error: 149_000
			.saturating_add((45_732_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes((1 as Weight).saturating_mul(b as Weight)))
	}
}