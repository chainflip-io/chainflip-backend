
//! Autogenerated weights for pallet_cf_ingress_egress
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-08-06, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-10-218`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_ingress_egress
// --extrinsic
// *
// --output
// state-chain/pallets/cf-ingress-egress/src/weights.rs
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_ingress_egress.
pub trait WeightInfo {
	fn disable_asset_egress() -> Weight;
	fn process_single_deposit() -> Weight;
	fn finalise_ingress(a: u32, ) -> Weight;
	fn vault_transfer_failed() -> Weight;
	fn ccm_broadcast_failed() -> Weight;
	fn add_boost_funds() -> Weight;
	fn process_deposit_as_lost(n: u32, ) -> Weight;
	fn stop_boosting() -> Weight;
	fn deposit_boosted() -> Weight;
	fn boost_finalised() -> Weight;
	fn create_boost_pools() -> Weight;
}

/// Weights for pallet_cf_ingress_egress using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `EthereumIngressEgress::DisabledEgressAssets` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DisabledEgressAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn disable_asset_egress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229`
		//  Estimated: `3694`
		// Minimum execution time: 12_990_000 picoseconds.
		Weight::from_parts(13_418_000, 3694)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelPool` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::FeeMultiplier` (r:1 w:0)
	/// Proof: `EthereumChainTracking::FeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `AssetBalances::WithheldAssets` (r:1 w:1)
	/// Proof: `AssetBalances::WithheldAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn process_single_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `647`
		//  Estimated: `4112`
		// Minimum execution time: 54_381_000 picoseconds.
		Weight::from_parts(55_101_000, 4112)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn finalise_ingress(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `363`
		//  Estimated: `3828`
		// Minimum execution time: 1_998_000 picoseconds.
		Weight::from_parts(7_560_975, 3828)
			// Standard Error: 6_155
			.saturating_add(Weight::from_parts(1_954_812, 0).saturating_mul(a.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumVaultAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumVaultAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EvmThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::FailedForeignChainCalls` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::FailedForeignChainCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn vault_transfer_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1790`
		//  Estimated: `12680`
		// Minimum execution time: 101_709_000 picoseconds.
		Weight::from_parts(102_692_000, 12680)
			.saturating_add(T::DbWeight::get().reads(20_u64))
			.saturating_add(T::DbWeight::get().writes(10_u64))
	}
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::FailedForeignChainCalls` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::FailedForeignChainCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn ccm_broadcast_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `575`
		//  Estimated: `4040`
		// Minimum execution time: 17_656_000 picoseconds.
		Weight::from_parts(18_393_000, 4040)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:1 w:1)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_boost_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1412`
		//  Estimated: `4877`
		// Minimum execution time: 38_014_000 picoseconds.
		Weight::from_parts(39_459_000, 4877)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn process_deposit_as_lost(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437 + n * (105 ±0)`
		//  Estimated: `3901 + n * (105 ±0)`
		// Minimum execution time: 13_722_000 picoseconds.
		Weight::from_parts(15_947_262, 3901)
			// Standard Error: 3_318
			.saturating_add(Weight::from_parts(675_311, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 105).saturating_mul(n.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:1 w:1)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn stop_boosting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5245`
		//  Estimated: `8710`
		// Minimum execution time: 77_916_000 picoseconds.
		Weight::from_parts(80_992_000, 8710)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::PrewitnessedDepositIdCounter` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::PrewitnessedDepositIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:2 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::FeeMultiplier` (r:1 w:0)
	/// Proof: `EthereumChainTracking::FeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `AssetBalances::WithheldAssets` (r:1 w:1)
	/// Proof: `AssetBalances::WithheldAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deposit_boosted() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6010`
		//  Estimated: `11950`
		// Minimum execution time: 144_465_000 picoseconds.
		Weight::from_parts(148_532_000, 11950)
			.saturating_add(T::DbWeight::get().reads(10_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelPool` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:30 w:30)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn boost_finalised() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15558`
		//  Estimated: `90798`
		// Minimum execution time: 328_929_000 picoseconds.
		Weight::from_parts(333_220_000, 90798)
			.saturating_add(T::DbWeight::get().reads(36_u64))
			.saturating_add(T::DbWeight::get().writes(34_u64))
	}
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_boost_pools() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229`
		//  Estimated: `3694`
		// Minimum execution time: 12_410_000 picoseconds.
		Weight::from_parts(12_934_000, 3694)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `EthereumIngressEgress::DisabledEgressAssets` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DisabledEgressAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn disable_asset_egress() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229`
		//  Estimated: `3694`
		// Minimum execution time: 12_990_000 picoseconds.
		Weight::from_parts(13_418_000, 3694)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelPool` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::FeeMultiplier` (r:1 w:0)
	/// Proof: `EthereumChainTracking::FeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `AssetBalances::WithheldAssets` (r:1 w:1)
	/// Proof: `AssetBalances::WithheldAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn process_single_deposit() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `647`
		//  Estimated: `4112`
		// Minimum execution time: 54_381_000 picoseconds.
		Weight::from_parts(55_101_000, 4112)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `a` is `[1, 100]`.
	fn finalise_ingress(a: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `363`
		//  Estimated: `3828`
		// Minimum execution time: 1_998_000 picoseconds.
		Weight::from_parts(7_560_975, 3828)
			// Standard Error: 6_155
			.saturating_add(Weight::from_parts(1_954_812, 0).saturating_mul(a.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumVaultAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumVaultAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumSignatureNonce` (r:1 w:1)
	/// Proof: `Environment::EthereumSignatureNonce` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumChainId` (r:1 w:0)
	/// Proof: `Environment::EthereumChainId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::EthereumKeyManagerAddress` (r:1 w:0)
	/// Proof: `Environment::EthereumKeyManagerAddress` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdCounter` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EvmThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::FailedForeignChainCalls` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::FailedForeignChainCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::RequestCallback` (r:0 w:1)
	/// Proof: `EvmThresholdSigner::RequestCallback` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn vault_transfer_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1790`
		//  Estimated: `12680`
		// Minimum execution time: 101_709_000 picoseconds.
		Weight::from_parts(102_692_000, 12680)
			.saturating_add(RocksDbWeight::get().reads(20_u64))
			.saturating_add(RocksDbWeight::get().writes(10_u64))
	}
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::FailedForeignChainCalls` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::FailedForeignChainCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn ccm_broadcast_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `575`
		//  Estimated: `4040`
		// Minimum execution time: 17_656_000 picoseconds.
		Weight::from_parts(18_393_000, 4040)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:1 w:1)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn add_boost_funds() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1412`
		//  Estimated: `4877`
		// Minimum execution time: 38_014_000 picoseconds.
		Weight::from_parts(39_459_000, 4877)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 100]`.
	fn process_deposit_as_lost(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `437 + n * (105 ±0)`
		//  Estimated: `3901 + n * (105 ±0)`
		// Minimum execution time: 13_722_000 picoseconds.
		Weight::from_parts(15_947_262, 3901)
			// Standard Error: 3_318
			.saturating_add(Weight::from_parts(675_311, 0).saturating_mul(n.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 105).saturating_mul(n.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:1 w:1)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn stop_boosting() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `5245`
		//  Estimated: `8710`
		// Minimum execution time: 77_916_000 picoseconds.
		Weight::from_parts(80_992_000, 8710)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::PrewitnessedDepositIdCounter` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::PrewitnessedDepositIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:2 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::FeeMultiplier` (r:1 w:0)
	/// Proof: `EthereumChainTracking::FeeMultiplier` (`max_values`: Some(1), `max_size`: Some(16), added: 511, mode: `MaxEncodedLen`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `AssetBalances::WithheldAssets` (r:1 w:1)
	/// Proof: `AssetBalances::WithheldAssets` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn deposit_boosted() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `6010`
		//  Estimated: `11950`
		// Minimum execution time: 144_465_000 picoseconds.
		Weight::from_parts(148_532_000, 11950)
			.saturating_add(RocksDbWeight::get().reads(10_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	/// Storage: `EthereumIngressEgress::DepositChannelLookup` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositChannelLookup` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositChannelPool` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::DepositChannelPool` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::MinimumDeposit` (r:1 w:0)
	/// Proof: `EthereumIngressEgress::MinimumDeposit` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::ScheduledEgressFetchOrTransfer` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::DepositBalances` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::DepositBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `LiquidityProvider::FreeBalances` (r:30 w:30)
	/// Proof: `LiquidityProvider::FreeBalances` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn boost_finalised() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `15558`
		//  Estimated: `90798`
		// Minimum execution time: 328_929_000 picoseconds.
		Weight::from_parts(333_220_000, 90798)
			.saturating_add(RocksDbWeight::get().reads(36_u64))
			.saturating_add(RocksDbWeight::get().writes(34_u64))
	}
	/// Storage: `EthereumIngressEgress::BoostPools` (r:1 w:1)
	/// Proof: `EthereumIngressEgress::BoostPools` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn create_boost_pools() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `229`
		//  Estimated: `3694`
		// Minimum execution time: 12_410_000 picoseconds.
		Weight::from_parts(12_934_000, 3694)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
}
