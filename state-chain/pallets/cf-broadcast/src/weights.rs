
//! Autogenerated weights for pallet_cf_broadcast
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-03, STEPS: `20`, REPEAT: `10`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-9-222`, CPU: `Intel(R) Xeon(R) Platinum 8275CL CPU @ 3.00GHz`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_broadcast
// --extrinsic
// *
// --output
// state-chain/pallets/cf-broadcast/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_broadcast.
pub trait WeightInfo {
	fn on_initialize(x: u32, ) -> Weight;
	fn transaction_failed() -> Weight;
	fn on_signature_ready() -> Weight;
	fn start_next_broadcast_attempt() -> Weight;
	fn transaction_succeeded() -> Weight;
}

/// Weights for pallet_cf_broadcast using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:999 w:0)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 1000]`.
	fn on_initialize(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `406 + x * (8 ±0)`
		//  Estimated: `130519 + x * (2291 ±0)`
		// Minimum execution time: 6_522_000 picoseconds.
		Weight::from_parts(9_533_202, 130519)
			// Standard Error: 3_659
			.saturating_add(Weight::from_parts(1_431_856, 0).saturating_mul(x.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(x.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 2291).saturating_mul(x.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastRetryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transaction_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1295`
		//  Estimated: `4760`
		// Minimum execution time: 40_988_000 picoseconds.
		Weight::from_parts(41_955_000, 4760)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumThresholdSigner::Signature` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_signature_ready() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1050`
		//  Estimated: `6990`
		// Minimum execution time: 74_036_000 picoseconds.
		Weight::from_parts(75_363_000, 6990)
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().writes(6_u64))
	}
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumVault::CurrentVaultEpochAndState` (r:1 w:0)
	/// Proof: `EthereumVault::CurrentVaultEpochAndState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumVault::Vaults` (r:1 w:0)
	/// Proof: `EthereumVault::Vaults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastAttemptCount` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastAttemptCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_next_broadcast_attempt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1480`
		//  Estimated: `7420`
		// Minimum execution time: 548_279_000 picoseconds.
		Weight::from_parts(550_288_000, 7420)
			.saturating_add(T::DbWeight::get().reads(11_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::RequestCallbacks` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::RequestCallbacks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastAttemptCount` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastAttemptCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_succeeded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `513`
		//  Estimated: `3978`
		// Minimum execution time: 63_017_000 picoseconds.
		Weight::from_parts(64_183_000, 3978)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:999 w:0)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `x` is `[1, 1000]`.
	fn on_initialize(x: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `406 + x * (8 ±0)`
		//  Estimated: `130519 + x * (2291 ±0)`
		// Minimum execution time: 6_522_000 picoseconds.
		Weight::from_parts(9_533_202, 130519)
			// Standard Error: 3_659
			.saturating_add(Weight::from_parts(1_431_856, 0).saturating_mul(x.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(x.into())))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
			.saturating_add(Weight::from_parts(0, 2291).saturating_mul(x.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastRetryQueue` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn transaction_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1295`
		//  Estimated: `4760`
		// Minimum execution time: 40_988_000 picoseconds.
		Weight::from_parts(41_955_000, 4760)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `EthereumThresholdSigner::Signature` (r:1 w:1)
	/// Proof: `EthereumThresholdSigner::Signature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_signature_ready() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1050`
		//  Estimated: `6990`
		// Minimum execution time: 74_036_000 picoseconds.
		Weight::from_parts(75_363_000, 6990)
			.saturating_add(RocksDbWeight::get().reads(8_u64))
			.saturating_add(RocksDbWeight::get().writes(6_u64))
	}
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumVault::CurrentVaultEpochAndState` (r:1 w:0)
	/// Proof: `EthereumVault::CurrentVaultEpochAndState` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumVault::Vaults` (r:1 w:0)
	/// Proof: `EthereumVault::Vaults` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastAttemptCount` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastAttemptCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_next_broadcast_attempt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1480`
		//  Estimated: `7420`
		// Minimum execution time: 548_279_000 picoseconds.
		Weight::from_parts(550_288_000, 7420)
			.saturating_add(RocksDbWeight::get().reads(11_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::RequestCallbacks` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::RequestCallbacks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastAttemptCount` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastAttemptCount` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::ThresholdSignatureData` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::ThresholdSignatureData` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_succeeded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `513`
		//  Estimated: `3978`
		// Minimum execution time: 63_017_000 picoseconds.
		Weight::from_parts(64_183_000, 3978)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
}
