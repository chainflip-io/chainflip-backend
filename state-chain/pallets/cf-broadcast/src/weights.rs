//! Autogenerated weights for pallet_cf_broadcast
//!
//! THIS FILE WAS AUTO-GENERATED USING CHAINFLIP NODE BENCHMARK CMD VERSION 4.0.0-dev
//! DATE: 2022-06-10, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./chainflip-node
// benchmark
// pallet
// --pallet
// pallet_cf_broadcast
// --extrinsic
// *
// --output
// state-chain/pallets/cf-broadcast/src/weights.rs
// --execution=wasm
// --steps=20
// --repeat=10
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_broadcast.
pub trait WeightInfo {
	fn on_initialize() -> Weight;
	fn transaction_ready_for_transmission() -> Weight;
	fn transaction_signing_failure() -> Weight;
	fn on_signature_ready() -> Weight;
	fn signature_accepted() -> Weight;
}

/// Weights for pallet_cf_broadcast using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	fn on_initialize() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn transaction_ready_for_transmission() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn transaction_signing_failure() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn on_signature_ready() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn signature_accepted() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	fn on_initialize() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn transaction_ready_for_transmission() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn transaction_signing_failure() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn on_signature_ready() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
	fn signature_accepted() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(400_000 as Weight)
	}
}
