
// Copyright 2025 Chainflip Labs GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0

//! Autogenerated weights for pallet_cf_broadcast
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 42.0.0
//! DATE: 2025-07-02, STEPS: `20`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `MacBookPro.hub`, CPU: `<UNKNOWN>`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev-3"), DB CACHE: 1024

// Executed Command:
// ./target/release/chainflip-node
// benchmark
// pallet
// --extrinsic
// *
// --pallet
// pallet_cf_broadcast
// --output
// state-chain/pallets/cf-broadcast/src/weights.rs
// --steps=20
// --repeat=20
// --template=state-chain/chainflip-weight-template.hbs
// --chain=dev-3

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::ParityDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_cf_broadcast.
pub trait WeightInfo {
	fn update_pallet_config() -> Weight;
	fn on_initialize(t: u32, r: u32, ) -> Weight;
	fn transaction_failed() -> Weight;
	fn on_signature_ready() -> Weight;
	fn start_next_broadcast_attempt() -> Weight;
	fn transaction_succeeded() -> Weight;
	fn stress_test(n: u32, ) -> Weight;
	fn re_sign_aborted_broadcasts(n: u32, ) -> Weight;
}

/// Weights for pallet_cf_broadcast using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_pallet_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 0)
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:49 w:49)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:49 w:0)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::CurrentOnChainKey` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::CurrentOnChainKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:49 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:49)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[1, 50]`.
	/// The range of component `r` is `[1, 50]`.
	fn on_initialize(t: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (589 ±0) + t * (115 ±0)`
		//  Estimated: `12250 + r * (2865 ±5) + t * (122 ±1)`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 12250)
			// Standard Error: 197_987
			.saturating_add(Weight::from_parts(2_395_421, 0).saturating_mul(t.into()))
			// Standard Error: 197_987
			.saturating_add(Weight::from_parts(28_587_067, 0).saturating_mul(r.into()))
			.saturating_add(T::DbWeight::get().reads(8_u64))
			.saturating_add(T::DbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(T::DbWeight::get().writes(1_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2865).saturating_mul(r.into()))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(t.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1194`
		//  Estimated: `4659`
		// Minimum execution time: 29_000_000 picoseconds.
		Weight::from_parts(30_000_000, 4659)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_signature_ready() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1528`
		//  Estimated: `7468`
		// Minimum execution time: 70_000_000 picoseconds.
		Weight::from_parts(87_000_000, 7468)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(8_u64))
	}
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::CurrentOnChainKey` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::CurrentOnChainKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_next_broadcast_attempt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1833`
		//  Estimated: `7773`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(56_000_000, 7773)
			.saturating_add(T::DbWeight::get().reads(13_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AbortedBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AbortedBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::IncomingKeyAndBroadcastId` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::IncomingKeyAndBroadcastId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetBalances::Liabilities` (r:1 w:1)
	/// Proof: `AssetBalances::Liabilities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::RequestSuccessCallbacks` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::RequestSuccessCallbacks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_succeeded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1064`
		//  Estimated: `4529`
		// Minimum execution time: 41_000_000 picoseconds.
		Weight::from_parts(43_000_000, 4529)
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(7_u64))
	}
	/// Storage: `EvmThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:50)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:50)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 50]`.
	fn stress_test(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1104`
		//  Estimated: `11994`
		// Minimum execution time: 43_000_000 picoseconds.
		Weight::from_parts(42_566_513, 11994)
			// Standard Error: 91_787
			.saturating_add(Weight::from_parts(22_090_957, 0).saturating_mul(n.into()))
			.saturating_add(T::DbWeight::get().reads(12_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
			.saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(n.into())))
	}
	/// The range of component `n` is `[1, 50]`.
	fn re_sign_aborted_broadcasts(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(1_910_877, 0)
			// Standard Error: 1_586
			.saturating_add(Weight::from_parts(9_745, 0).saturating_mul(n.into()))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	fn update_pallet_config() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_000_000 picoseconds.
		Weight::from_parts(5_000_000, 0)
			.saturating_add(ParityDbWeight::get().writes(1_u64))
	}
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Environment::RuntimeSafeMode` (r:1 w:0)
	/// Proof: `Environment::RuntimeSafeMode` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:49 w:49)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:49 w:0)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::CurrentOnChainKey` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::CurrentOnChainKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:49 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:49)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `t` is `[1, 50]`.
	/// The range of component `r` is `[1, 50]`.
	fn on_initialize(t: u32, r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0 + r * (589 ±0) + t * (115 ±0)`
		//  Estimated: `12250 + r * (2865 ±5) + t * (122 ±1)`
		// Minimum execution time: 22_000_000 picoseconds.
		Weight::from_parts(23_000_000, 12250)
			// Standard Error: 197_987
			.saturating_add(Weight::from_parts(2_395_421, 0).saturating_mul(t.into()))
			// Standard Error: 197_987
			.saturating_add(Weight::from_parts(28_587_067, 0).saturating_mul(r.into()))
			.saturating_add(ParityDbWeight::get().reads(8_u64))
			.saturating_add(ParityDbWeight::get().reads((3_u64).saturating_mul(r.into())))
			.saturating_add(ParityDbWeight::get().writes(1_u64))
			.saturating_add(ParityDbWeight::get().writes((2_u64).saturating_mul(r.into())))
			.saturating_add(Weight::from_parts(0, 2865).saturating_mul(r.into()))
			.saturating_add(Weight::from_parts(0, 122).saturating_mul(t.into()))
	}
	/// Storage: `AccountRoles::AccountRoles` (r:1 w:0)
	/// Proof: `AccountRoles::AccountRoles` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentAuthorities` (r:1 w:0)
	/// Proof: `Validator::CurrentAuthorities` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::DelayedBroadcastRetryQueue` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_failed() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1194`
		//  Estimated: `4659`
		// Minimum execution time: 29_000_000 picoseconds.
		Weight::from_parts(30_000_000, 4659)
			.saturating_add(ParityDbWeight::get().reads(5_u64))
			.saturating_add(ParityDbWeight::get().writes(2_u64))
	}
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn on_signature_ready() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1528`
		//  Estimated: `7468`
		// Minimum execution time: 70_000_000 picoseconds.
		Weight::from_parts(87_000_000, 7468)
			.saturating_add(ParityDbWeight::get().reads(12_u64))
			.saturating_add(ParityDbWeight::get().writes(8_u64))
	}
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::CurrentOnChainKey` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::CurrentOnChainKey` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumChainTracking::CurrentChainState` (r:1 w:0)
	/// Proof: `EthereumChainTracking::CurrentChainState` (`max_values`: Some(1), `max_size`: Some(40), added: 535, mode: `MaxEncodedLen`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:2 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::CurrentEpoch` (r:1 w:0)
	/// Proof: `Validator::CurrentEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastTimeout` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::Timeouts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::Timeouts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:0 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn start_next_broadcast_attempt() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1833`
		//  Estimated: `7773`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(56_000_000, 7773)
			.saturating_add(ParityDbWeight::get().reads(13_u64))
			.saturating_add(ParityDbWeight::get().writes(4_u64))
	}
	/// Storage: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionOutIdToBroadcastId` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastBarriers` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastBarriers` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AbortedBroadcasts` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AbortedBroadcasts` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::IncomingKeyAndBroadcastId` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::IncomingKeyAndBroadcastId` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::TransactionMetadata` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::TransactionMetadata` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::AwaitingBroadcast` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::AwaitingBroadcast` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `AssetBalances::Liabilities` (r:1 w:1)
	/// Proof: `AssetBalances::Liabilities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::RequestSuccessCallbacks` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::RequestSuccessCallbacks` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::FailedBroadcasters` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::FailedBroadcasters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (r:1 w:0)
	/// Proof: `EthereumBroadcaster::BroadcastIdToTransactionOutIds` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EthereumBroadcaster::PendingApiCalls` (r:1 w:1)
	/// Proof: `EthereumBroadcaster::PendingApiCalls` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn transaction_succeeded() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1064`
		//  Estimated: `4529`
		// Minimum execution time: 41_000_000 picoseconds.
		Weight::from_parts(43_000_000, 4529)
			.saturating_add(ParityDbWeight::get().reads(12_u64))
			.saturating_add(ParityDbWeight::get().writes(7_u64))
	}
	/// Storage: `EvmThresholdSigner::CurrentKeyEpoch` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::CurrentKeyEpoch` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::Keys` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::Keys` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureRequestIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `Validator::HistoricalAuthorities` (r:1 w:0)
	/// Proof: `Validator::HistoricalAuthorities` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `Reputation::Suspensions` (r:4 w:0)
	/// Proof: `Reputation::Suspensions` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyIdCounter` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyIdCounter` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (r:1 w:0)
	/// Proof: `EvmThresholdSigner::ThresholdSignatureResponseTimeout` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::CeremonyRetryQueues` (r:1 w:1)
	/// Proof: `EvmThresholdSigner::CeremonyRetryQueues` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `CfeInterface::CfeEvents` (r:1 w:1)
	/// Proof: `CfeInterface::CfeEvents` (`max_values`: Some(1), `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::SignerAndSignature` (r:0 w:50)
	/// Proof: `EvmThresholdSigner::SignerAndSignature` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// Storage: `EvmThresholdSigner::PendingCeremonies` (r:0 w:50)
	/// Proof: `EvmThresholdSigner::PendingCeremonies` (`max_values`: None, `max_size`: None, mode: `Measured`)
	/// The range of component `n` is `[1, 50]`.
	fn stress_test(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1104`
		//  Estimated: `11994`
		// Minimum execution time: 43_000_000 picoseconds.
		Weight::from_parts(42_566_513, 11994)
			// Standard Error: 91_787
			.saturating_add(Weight::from_parts(22_090_957, 0).saturating_mul(n.into()))
			.saturating_add(ParityDbWeight::get().reads(12_u64))
			.saturating_add(ParityDbWeight::get().writes(4_u64))
			.saturating_add(ParityDbWeight::get().writes((2_u64).saturating_mul(n.into())))
	}
	/// The range of component `n` is `[1, 50]`.
	fn re_sign_aborted_broadcasts(n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 2_000_000 picoseconds.
		Weight::from_parts(1_910_877, 0)
			// Standard Error: 1_586
			.saturating_add(Weight::from_parts(9_745, 0).saturating_mul(n.into()))
	}
}
