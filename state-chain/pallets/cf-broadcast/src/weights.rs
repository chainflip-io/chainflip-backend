//! Autogenerated weights for pallet_cf_broadcast
//!
//! THIS FILE WAS AUTO-GENERATED USING CHAINFLIP NODE BENCHMARK CMD VERSION 4.0.0-dev
//! DATE: 2022-10-24, STEPS: `20`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("three-node-test"), DB CACHE: 1024

// Executed Command:
// ./target/release/chainflip-node
// benchmark
// pallet
// --chain
// three-node-test
// --extrinsic
// *
// --pallet
// pallet_cf_broadcast
// --output
// state-chain/pallets/cf-broadcast/src/weights.rs
// --steps=20
// --repeat=1
// --template=state-chain/chainflip-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_cf_broadcast.
pub trait WeightInfo {
	fn on_initialize(x: u32, ) -> Weight;
	fn whitelist_transaction_for_refund() -> Weight;
	fn transaction_signing_failure() -> Weight;
	fn on_signature_ready() -> Weight;
	fn start_next_broadcast_attempt() -> Weight;
	fn signature_accepted() -> Weight;
}

/// Weights for pallet_cf_broadcast using the Substrate node and recommended hardware.
pub struct PalletWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for PalletWeight<T> {
	// Storage: EthereumBroadcaster Timeouts (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:49 w:0)
	fn on_initialize(x: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 12_000
			.saturating_add((1_450_000 as Weight).saturating_mul(x as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(x as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:1 w:0)
	// Storage: EthereumBroadcaster TransactionFeeDeficit (r:1 w:1)
	// Storage: EthereumBroadcaster RefundSignerId (r:1 w:1)
	// Storage: EthereumBroadcaster TransactionHashWhitelist (r:0 w:1)
	fn whitelist_transaction_for_refund() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(167_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:1 w:1)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastRetryQueue (r:1 w:1)
	fn transaction_signing_failure() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(27_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumThresholdSigner Signature (r:1 w:1)
	// Storage: Environment EthereumChainId (r:1 w:0)
	// Storage: Environment SupportedEthAssets (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastIdCounter (r:1 w:1)
	// Storage: EthereumChainTracking ChainState (r:1 w:0)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:0)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster Timeouts (r:1 w:1)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:0 w:1)
	// Storage: EthereumBroadcaster SignatureToBroadcastIdLookup (r:0 w:1)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:0 w:1)
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:0 w:1)
	fn on_signature_ready() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(46_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(9 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:1 w:0)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:1 w:1)
	// Storage: EthereumChainTracking ChainState (r:1 w:0)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster Timeouts (r:1 w:1)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:0 w:1)
	fn start_next_broadcast_attempt() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(157_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(8 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumBroadcaster SignatureToBroadcastIdLookup (r:1 w:1)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:1 w:0)
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:1 w:0)
	// Storage: EthereumBroadcaster TransactionHashWhitelist (r:1 w:1)
	// Storage: EthereumBroadcaster TransactionFeeDeficit (r:1 w:1)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:0 w:1)
	fn signature_accepted() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(22_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: EthereumBroadcaster Timeouts (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:49 w:0)
	fn on_initialize(x: u32, ) -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(0 as Weight)
			// Standard Error: 12_000
			.saturating_add((1_450_000 as Weight).saturating_mul(x as Weight))
			.saturating_add(RocksDbWeight::get().reads((1 as Weight).saturating_mul(x as Weight)))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:1 w:0)
	// Storage: EthereumBroadcaster TransactionFeeDeficit (r:1 w:1)
	// Storage: EthereumBroadcaster RefundSignerId (r:1 w:1)
	// Storage: EthereumBroadcaster TransactionHashWhitelist (r:0 w:1)
	fn whitelist_transaction_for_refund() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(167_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(4 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: AccountRoles AccountRoles (r:1 w:0)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:1 w:1)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:1)
	// Storage: Validator CurrentAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastRetryQueue (r:1 w:1)
	fn transaction_signing_failure() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(27_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumThresholdSigner Signature (r:1 w:1)
	// Storage: Environment EthereumChainId (r:1 w:0)
	// Storage: Environment SupportedEthAssets (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastIdCounter (r:1 w:1)
	// Storage: EthereumChainTracking ChainState (r:1 w:0)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:0)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster Timeouts (r:1 w:1)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:0 w:1)
	// Storage: EthereumBroadcaster SignatureToBroadcastIdLookup (r:0 w:1)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:0 w:1)
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:0 w:1)
	fn on_signature_ready() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(46_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(9 as Weight))
			.saturating_add(RocksDbWeight::get().writes(7 as Weight))
	}
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:1 w:0)
	// Storage: Validator CurrentEpoch (r:1 w:0)
	// Storage: EthereumVault Vaults (r:1 w:0)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:1 w:1)
	// Storage: EthereumChainTracking ChainState (r:1 w:0)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:1 w:0)
	// Storage: Validator HistoricalAuthorities (r:1 w:0)
	// Storage: EthereumBroadcaster Timeouts (r:1 w:1)
	// Storage: EthereumBroadcaster AwaitingBroadcast (r:0 w:1)
	fn start_next_broadcast_attempt() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(157_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(8 as Weight))
			.saturating_add(RocksDbWeight::get().writes(3 as Weight))
	}
	// Storage: EthereumBroadcaster SignatureToBroadcastIdLookup (r:1 w:1)
	// Storage: EthereumBroadcaster BroadcastIdToAttemptNumbers (r:1 w:0)
	// Storage: EthereumBroadcaster ThresholdSignatureData (r:1 w:0)
	// Storage: EthereumBroadcaster TransactionHashWhitelist (r:1 w:1)
	// Storage: EthereumBroadcaster TransactionFeeDeficit (r:1 w:1)
	// Storage: EthereumBroadcaster FailedBroadcasters (r:0 w:1)
	fn signature_accepted() -> Weight {
		#[allow(clippy::unnecessary_cast)]
		(22_000_000 as Weight)
			.saturating_add(RocksDbWeight::get().reads(5 as Weight))
			.saturating_add(RocksDbWeight::get().writes(4 as Weight))
	}
}
